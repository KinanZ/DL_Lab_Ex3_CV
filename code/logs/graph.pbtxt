node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        tensor_content: "\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "Const"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 300
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 90000
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 90000
        }
        dim {
          size: 12
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "First_conv/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "First_conv/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "First_conv/Conv/weights/Initializer/random_uniform/max"
  input: "First_conv/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "First_conv/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "First_conv/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "First_conv/Conv/weights/Initializer/random_uniform/mul"
  input: "First_conv/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "First_conv/Conv/weights/Assign"
  op: "Assign"
  input: "First_conv/Conv/weights"
  input: "First_conv/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/weights/read"
  op: "Identity"
  input: "First_conv/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/convolution"
  op: "Conv2D"
  input: "Placeholder"
  input: "First_conv/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "First_conv/Conv/BatchNorm/beta"
  input: "First_conv/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "First_conv/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "First_conv/Conv/BatchNorm/moving_mean"
  input: "First_conv/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "First_conv/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "First_conv/Conv/BatchNorm/moving_variance"
  input: "First_conv/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "First_conv/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/First_conv/Conv/convolution"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/First_conv/Conv/convolution"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "First_conv/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "First_conv/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "First_conv/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "First_conv/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/First_conv/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/First_conv/Conv/convolution"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "First_conv/Conv/BatchNorm/beta/read"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/First_conv/Conv/Relu"
  op: "Relu"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/weights"
  input: "inverted_bottleneck1_1_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/First_conv/Conv/Relu"
  input: "inverted_bottleneck1_1_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/Relu6"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/weights"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/weights"
  input: "inverted_bottleneck2_6_1/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1"
  input: "inverted_bottleneck2_6_1/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/Relu6"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.22360679507255554
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22360679507255554
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/weights"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/weights"
  input: "inverted_bottleneck3_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "inverted_bottleneck3_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/Relu6"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/weights"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck3_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv/weights"
  input: "inverted_bottleneck4_6_1/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck3_6_0/Add"
  input: "inverted_bottleneck4_6_1/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv/Relu6"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18463723361492157
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18463723361492157
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv_1/weights"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck4_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck4_6_1/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "inverted_bottleneck5_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv/Relu6"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck5_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck5_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck4_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "Net_prediction/inverted_bottleneck5_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck5_6_0/Add"
  input: "inverted_bottleneck6_6_1/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv/Relu6"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck6_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "inverted_bottleneck7_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv/Relu6"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck7_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck7_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck6_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "Net_prediction/inverted_bottleneck7_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck7_6_0/Add"
  input: "inverted_bottleneck8_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv/Relu6"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck8_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck8_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck7_6_0/Add"
  input: "Net_prediction/inverted_bottleneck8_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck8_6_0/Add"
  input: "inverted_bottleneck9_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv/Relu6"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck9_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck9_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck8_6_0/Add"
  input: "Net_prediction/inverted_bottleneck9_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck9_6_0/Add"
  input: "inverted_bottleneck10_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv/Relu6"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11180339753627777
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck10_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  input: "inverted_bottleneck11_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv/Relu6"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck11_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck11_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck10_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  input: "Net_prediction/inverted_bottleneck11_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck11_6_0/Add"
  input: "inverted_bottleneck12_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv/Relu6"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck12_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck12_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck11_6_0/Add"
  input: "Net_prediction/inverted_bottleneck12_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck12_6_0/Add"
  input: "inverted_bottleneck13_6_1/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv/Relu6"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0902893915772438
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0902893915772438
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck13_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "inverted_bottleneck14_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv/Relu6"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck14_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck14_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck13_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "Net_prediction/inverted_bottleneck14_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck14_6_0/Add"
  input: "inverted_bottleneck15_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv/Relu6"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck15_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck15_6_0/Add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck14_6_0/Add"
  input: "Net_prediction/inverted_bottleneck15_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck15_6_0/Add"
  input: "inverted_bottleneck16_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv/Relu6"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06846532225608826
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06846532225608826
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/convolution"
  op: "Conv2D"
  input: "Net_prediction/inverted_bottleneck16_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/mean"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/StopGradient"
  op: "StopGradient"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/variance"
  op: "Mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/Squeeze"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  op: "Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/sub"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/sub"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/Squeeze_1"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/mul"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/mul"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Decoder41/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "Decoder41/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.034020692110061646
      }
    }
  }
}
node {
  name: "Decoder41/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.034020692110061646
      }
    }
  }
}
node {
  name: "Decoder41/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder41/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder41/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder41/weights/Initializer/random_uniform/max"
  input: "Decoder41/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Decoder41/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder41/weights/Initializer/random_uniform/RandomUniform"
  input: "Decoder41/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Decoder41/weights/Initializer/random_uniform"
  op: "Add"
  input: "Decoder41/weights/Initializer/random_uniform/mul"
  input: "Decoder41/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Decoder41/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder41/weights/Assign"
  op: "Assign"
  input: "Decoder41/weights"
  input: "Decoder41/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder41/weights/read"
  op: "Identity"
  input: "Decoder41/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "Decoder41/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder41/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder41/biases/Assign"
  op: "Assign"
  input: "Decoder41/biases"
  input: "Decoder41/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder41/biases/read"
  op: "Identity"
  input: "Decoder41/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice"
  op: "StridedSlice"
  input: "Net_prediction/Decoder41/Shape"
  input: "Net_prediction/Decoder41/strided_slice/stack"
  input: "Net_prediction/Decoder41/strided_slice/stack_1"
  input: "Net_prediction/Decoder41/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice_1"
  op: "StridedSlice"
  input: "Net_prediction/Decoder41/Shape"
  input: "Net_prediction/Decoder41/strided_slice_1/stack"
  input: "Net_prediction/Decoder41/strided_slice_1/stack_1"
  input: "Net_prediction/Decoder41/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/strided_slice_2"
  op: "StridedSlice"
  input: "Net_prediction/Decoder41/Shape"
  input: "Net_prediction/Decoder41/strided_slice_2/stack"
  input: "Net_prediction/Decoder41/strided_slice_2/stack_1"
  input: "Net_prediction/Decoder41/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder41/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/mul"
  op: "Mul"
  input: "Net_prediction/Decoder41/strided_slice_1"
  input: "Net_prediction/Decoder41/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/mul_1"
  op: "Mul"
  input: "Net_prediction/Decoder41/strided_slice_2"
  input: "Net_prediction/Decoder41/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder41/stack"
  op: "Pack"
  input: "Net_prediction/Decoder41/strided_slice"
  input: "Net_prediction/Decoder41/mul"
  input: "Net_prediction/Decoder41/mul_1"
  input: "Net_prediction/Decoder41/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Net_prediction/Decoder41/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "Net_prediction/Decoder41/stack"
  input: "Decoder41/weights/read"
  input: "Net_prediction/inverted_bottleneck16_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/Decoder41/BiasAdd"
  op: "BiasAdd"
  input: "Net_prediction/Decoder41/conv2d_transpose"
  input: "Decoder41/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Net_prediction/Decoder41/Relu"
  op: "Relu"
  input: "Net_prediction/Decoder41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Relu"
  op: "Relu"
  input: "Net_prediction/Decoder41/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377&\000\000\000&\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat/Slice"
  op: "Slice"
  input: "Net_prediction/Relu"
  input: "Net_prediction/crop_and_concat/Slice/begin"
  input: "Net_prediction/crop_and_concat/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_1/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_1/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377&\000\000\000&\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_1/Slice"
  op: "Slice"
  input: "Net_prediction/inverted_bottleneck12_6_0/Add"
  input: "Net_prediction/crop_and_concat_1/Slice/begin"
  input: "Net_prediction/crop_and_concat_1/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Net_prediction/concat"
  op: "ConcatV2"
  input: "Net_prediction/crop_and_concat_1/Slice"
  input: "Net_prediction/inverted_bottleneck12_6_0/Add"
  input: "Net_prediction/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03857583925127983
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03857583925127983
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_fused_Decoder41/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_fused_Decoder41/weights/Initializer/random_uniform/max"
  input: "conv_fused_Decoder41/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_fused_Decoder41/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_fused_Decoder41/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_fused_Decoder41/weights/Initializer/random_uniform/mul"
  input: "conv_fused_Decoder41/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/Assign"
  op: "Assign"
  input: "conv_fused_Decoder41/weights"
  input: "conv_fused_Decoder41/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder41/weights/read"
  op: "Identity"
  input: "conv_fused_Decoder41/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_fused_Decoder41/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder41/biases/Assign"
  op: "Assign"
  input: "conv_fused_Decoder41/biases"
  input: "conv_fused_Decoder41/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder41/biases/read"
  op: "Identity"
  input: "conv_fused_Decoder41/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder41/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder41/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder41/convolution"
  op: "Conv2D"
  input: "Net_prediction/concat"
  input: "conv_fused_Decoder41/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder41/BiasAdd"
  op: "BiasAdd"
  input: "Net_prediction/conv_fused_Decoder41/convolution"
  input: "conv_fused_Decoder41/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder41/Relu"
  op: "Relu"
  input: "Net_prediction/conv_fused_Decoder41/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 38
          }
          dim {
            size: 38
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Decoder42/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\240\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Decoder42/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0400320366024971
      }
    }
  }
}
node {
  name: "Decoder42/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0400320366024971
      }
    }
  }
}
node {
  name: "Decoder42/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder42/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 160
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder42/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder42/weights/Initializer/random_uniform/max"
  input: "Decoder42/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Decoder42/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder42/weights/Initializer/random_uniform/RandomUniform"
  input: "Decoder42/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 160
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Decoder42/weights/Initializer/random_uniform"
  op: "Add"
  input: "Decoder42/weights/Initializer/random_uniform/mul"
  input: "Decoder42/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 160
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Decoder42/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 160
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 160
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder42/weights/Assign"
  op: "Assign"
  input: "Decoder42/weights"
  input: "Decoder42/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 160
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder42/weights/read"
  op: "Identity"
  input: "Decoder42/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 160
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Decoder42/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder42/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder42/biases/Assign"
  op: "Assign"
  input: "Decoder42/biases"
  input: "Decoder42/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder42/biases/read"
  op: "Identity"
  input: "Decoder42/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/Shape"
  op: "Shape"
  input: "Net_prediction/conv_fused_Decoder41/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice"
  op: "StridedSlice"
  input: "Net_prediction/Decoder42/Shape"
  input: "Net_prediction/Decoder42/strided_slice/stack"
  input: "Net_prediction/Decoder42/strided_slice/stack_1"
  input: "Net_prediction/Decoder42/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice_1"
  op: "StridedSlice"
  input: "Net_prediction/Decoder42/Shape"
  input: "Net_prediction/Decoder42/strided_slice_1/stack"
  input: "Net_prediction/Decoder42/strided_slice_1/stack_1"
  input: "Net_prediction/Decoder42/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/strided_slice_2"
  op: "StridedSlice"
  input: "Net_prediction/Decoder42/Shape"
  input: "Net_prediction/Decoder42/strided_slice_2/stack"
  input: "Net_prediction/Decoder42/strided_slice_2/stack_1"
  input: "Net_prediction/Decoder42/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder42/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/mul"
  op: "Mul"
  input: "Net_prediction/Decoder42/strided_slice_1"
  input: "Net_prediction/Decoder42/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/mul_1"
  op: "Mul"
  input: "Net_prediction/Decoder42/strided_slice_2"
  input: "Net_prediction/Decoder42/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder42/stack"
  op: "Pack"
  input: "Net_prediction/Decoder42/strided_slice"
  input: "Net_prediction/Decoder42/mul"
  input: "Net_prediction/Decoder42/mul_1"
  input: "Net_prediction/Decoder42/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Net_prediction/Decoder42/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "Net_prediction/Decoder42/stack"
  input: "Decoder42/weights/read"
  input: "Net_prediction/conv_fused_Decoder41/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 76
          }
          dim {
            size: 76
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/Decoder42/BiasAdd"
  op: "BiasAdd"
  input: "Net_prediction/Decoder42/conv2d_transpose"
  input: "Decoder42/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 76
          }
          dim {
            size: 76
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Net_prediction/Decoder42/Relu"
  op: "Relu"
  input: "Net_prediction/Decoder42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 76
          }
          dim {
            size: 76
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Relu_1"
  op: "Relu"
  input: "Net_prediction/Decoder42/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 76
          }
          dim {
            size: 76
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_2/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_2/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377K\000\000\000K\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_2/Slice"
  op: "Slice"
  input: "Net_prediction/Relu_1"
  input: "Net_prediction/crop_and_concat_2/Slice/begin"
  input: "Net_prediction/crop_and_concat_2/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_3/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_3/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377K\000\000\000K\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_3/Slice"
  op: "Slice"
  input: "Net_prediction/inverted_bottleneck5_6_0/Add"
  input: "Net_prediction/crop_and_concat_3/Slice/begin"
  input: "Net_prediction/crop_and_concat_3/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Net_prediction/concat_1"
  op: "ConcatV2"
  input: "Net_prediction/crop_and_concat_3/Slice"
  input: "Net_prediction/inverted_bottleneck5_6_0/Add"
  input: "Net_prediction/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.054554473608732224
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054554473608732224
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_fused_Decoder42/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_fused_Decoder42/weights/Initializer/random_uniform/max"
  input: "conv_fused_Decoder42/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_fused_Decoder42/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_fused_Decoder42/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_fused_Decoder42/weights/Initializer/random_uniform/mul"
  input: "conv_fused_Decoder42/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/Assign"
  op: "Assign"
  input: "conv_fused_Decoder42/weights"
  input: "conv_fused_Decoder42/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder42/weights/read"
  op: "Identity"
  input: "conv_fused_Decoder42/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_fused_Decoder42/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder42/biases/Assign"
  op: "Assign"
  input: "conv_fused_Decoder42/biases"
  input: "conv_fused_Decoder42/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder42/biases/read"
  op: "Identity"
  input: "conv_fused_Decoder42/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder42/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder42/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder42/convolution"
  op: "Conv2D"
  input: "Net_prediction/concat_1"
  input: "conv_fused_Decoder42/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder42/BiasAdd"
  op: "BiasAdd"
  input: "Net_prediction/conv_fused_Decoder42/convolution"
  input: "conv_fused_Decoder42/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder42/Relu"
  op: "Relu"
  input: "Net_prediction/conv_fused_Decoder42/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 75
          }
          dim {
            size: 75
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Decoder43/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "Decoder43/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "Decoder43/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "Decoder43/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder43/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder43/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder43/weights/Initializer/random_uniform/max"
  input: "Decoder43/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Decoder43/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder43/weights/Initializer/random_uniform/RandomUniform"
  input: "Decoder43/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Decoder43/weights/Initializer/random_uniform"
  op: "Add"
  input: "Decoder43/weights/Initializer/random_uniform/mul"
  input: "Decoder43/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Decoder43/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder43/weights/Assign"
  op: "Assign"
  input: "Decoder43/weights"
  input: "Decoder43/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder43/weights/read"
  op: "Identity"
  input: "Decoder43/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
}
node {
  name: "Decoder43/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder43/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder43/biases/Assign"
  op: "Assign"
  input: "Decoder43/biases"
  input: "Decoder43/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder43/biases/read"
  op: "Identity"
  input: "Decoder43/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/Shape"
  op: "Shape"
  input: "Net_prediction/conv_fused_Decoder42/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice"
  op: "StridedSlice"
  input: "Net_prediction/Decoder43/Shape"
  input: "Net_prediction/Decoder43/strided_slice/stack"
  input: "Net_prediction/Decoder43/strided_slice/stack_1"
  input: "Net_prediction/Decoder43/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice_1"
  op: "StridedSlice"
  input: "Net_prediction/Decoder43/Shape"
  input: "Net_prediction/Decoder43/strided_slice_1/stack"
  input: "Net_prediction/Decoder43/strided_slice_1/stack_1"
  input: "Net_prediction/Decoder43/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/strided_slice_2"
  op: "StridedSlice"
  input: "Net_prediction/Decoder43/Shape"
  input: "Net_prediction/Decoder43/strided_slice_2/stack"
  input: "Net_prediction/Decoder43/strided_slice_2/stack_1"
  input: "Net_prediction/Decoder43/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder43/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/mul"
  op: "Mul"
  input: "Net_prediction/Decoder43/strided_slice_1"
  input: "Net_prediction/Decoder43/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/mul_1"
  op: "Mul"
  input: "Net_prediction/Decoder43/strided_slice_2"
  input: "Net_prediction/Decoder43/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder43/stack"
  op: "Pack"
  input: "Net_prediction/Decoder43/strided_slice"
  input: "Net_prediction/Decoder43/mul"
  input: "Net_prediction/Decoder43/mul_1"
  input: "Net_prediction/Decoder43/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Net_prediction/Decoder43/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "Net_prediction/Decoder43/stack"
  input: "Decoder43/weights/read"
  input: "Net_prediction/conv_fused_Decoder42/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/Decoder43/BiasAdd"
  op: "BiasAdd"
  input: "Net_prediction/Decoder43/conv2d_transpose"
  input: "Decoder43/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Net_prediction/Decoder43/Relu"
  op: "Relu"
  input: "Net_prediction/Decoder43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Relu_2"
  op: "Relu"
  input: "Net_prediction/Decoder43/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_4/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_4/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\226\000\000\000\226\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_4/Slice"
  op: "Slice"
  input: "Net_prediction/Relu_2"
  input: "Net_prediction/crop_and_concat_4/Slice/begin"
  input: "Net_prediction/crop_and_concat_4/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_5/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_5/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\226\000\000\000\226\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_5/Slice"
  op: "Slice"
  input: "Net_prediction/inverted_bottleneck3_6_0/Add"
  input: "Net_prediction/crop_and_concat_5/Slice/begin"
  input: "Net_prediction/crop_and_concat_5/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Net_prediction/concat_2"
  op: "ConcatV2"
  input: "Net_prediction/crop_and_concat_5/Slice"
  input: "Net_prediction/inverted_bottleneck3_6_0/Add"
  input: "Net_prediction/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06804138422012329
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06804138422012329
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_fused_Decoder43/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_fused_Decoder43/weights/Initializer/random_uniform/max"
  input: "conv_fused_Decoder43/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_fused_Decoder43/weights/Initializer/random_uniform/RandomUniform"
  input: "conv_fused_Decoder43/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Initializer/random_uniform"
  op: "Add"
  input: "conv_fused_Decoder43/weights/Initializer/random_uniform/mul"
  input: "conv_fused_Decoder43/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Assign"
  op: "Assign"
  input: "conv_fused_Decoder43/weights"
  input: "conv_fused_Decoder43/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/read"
  op: "Identity"
  input: "conv_fused_Decoder43/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Assign"
  op: "Assign"
  input: "conv_fused_Decoder43/biases"
  input: "conv_fused_Decoder43/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/read"
  op: "Identity"
  input: "conv_fused_Decoder43/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder43/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder43/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder43/convolution"
  op: "Conv2D"
  input: "Net_prediction/concat_2"
  input: "conv_fused_Decoder43/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder43/BiasAdd"
  op: "BiasAdd"
  input: "Net_prediction/conv_fused_Decoder43/convolution"
  input: "conv_fused_Decoder43/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Net_prediction/conv_fused_Decoder43/Relu"
  op: "Relu"
  input: "Net_prediction/conv_fused_Decoder43/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Decoder44/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000x\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Decoder44/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0555555559694767
      }
    }
  }
}
node {
  name: "Decoder44/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0555555559694767
      }
    }
  }
}
node {
  name: "Decoder44/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder44/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder44/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder44/weights/Initializer/random_uniform/max"
  input: "Decoder44/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Decoder44/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder44/weights/Initializer/random_uniform/RandomUniform"
  input: "Decoder44/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Decoder44/weights/Initializer/random_uniform"
  op: "Add"
  input: "Decoder44/weights/Initializer/random_uniform/mul"
  input: "Decoder44/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Decoder44/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 120
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder44/weights/Assign"
  op: "Assign"
  input: "Decoder44/weights"
  input: "Decoder44/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder44/weights/read"
  op: "Identity"
  input: "Decoder44/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Decoder44/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder44/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder44/biases/Assign"
  op: "Assign"
  input: "Decoder44/biases"
  input: "Decoder44/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder44/biases/read"
  op: "Identity"
  input: "Decoder44/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/Shape"
  op: "Shape"
  input: "Net_prediction/conv_fused_Decoder43/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice"
  op: "StridedSlice"
  input: "Net_prediction/Decoder44/Shape"
  input: "Net_prediction/Decoder44/strided_slice/stack"
  input: "Net_prediction/Decoder44/strided_slice/stack_1"
  input: "Net_prediction/Decoder44/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice_1"
  op: "StridedSlice"
  input: "Net_prediction/Decoder44/Shape"
  input: "Net_prediction/Decoder44/strided_slice_1/stack"
  input: "Net_prediction/Decoder44/strided_slice_1/stack_1"
  input: "Net_prediction/Decoder44/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/strided_slice_2"
  op: "StridedSlice"
  input: "Net_prediction/Decoder44/Shape"
  input: "Net_prediction/Decoder44/strided_slice_2/stack"
  input: "Net_prediction/Decoder44/strided_slice_2/stack_1"
  input: "Net_prediction/Decoder44/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Net_prediction/Decoder44/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/mul"
  op: "Mul"
  input: "Net_prediction/Decoder44/strided_slice_1"
  input: "Net_prediction/Decoder44/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/mul_1"
  op: "Mul"
  input: "Net_prediction/Decoder44/strided_slice_2"
  input: "Net_prediction/Decoder44/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/stack/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120
      }
    }
  }
}
node {
  name: "Net_prediction/Decoder44/stack"
  op: "Pack"
  input: "Net_prediction/Decoder44/strided_slice"
  input: "Net_prediction/Decoder44/mul"
  input: "Net_prediction/Decoder44/mul_1"
  input: "Net_prediction/Decoder44/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Net_prediction/Decoder44/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "Net_prediction/Decoder44/stack"
  input: "Decoder44/weights/read"
  input: "Net_prediction/conv_fused_Decoder43/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/Decoder44/BiasAdd"
  op: "BiasAdd"
  input: "Net_prediction/Decoder44/conv2d_transpose"
  input: "Decoder44/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Net_prediction/Decoder44/Relu"
  op: "Relu"
  input: "Net_prediction/Decoder44/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Relu_3"
  op: "Relu"
  input: "Net_prediction/Decoder44/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_6/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_6/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377,\001\000\000,\001\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Net_prediction/crop_and_concat_6/Slice"
  op: "Slice"
  input: "Net_prediction/Relu_3"
  input: "Net_prediction/crop_and_concat_6/Slice/begin"
  input: "Net_prediction/crop_and_concat_6/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000x\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21320071816444397
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21320071816444397
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Final_decoder/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Final_decoder/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Final_decoder/weights/Initializer/random_uniform/max"
  input: "Final_decoder/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Final_decoder/weights/Initializer/random_uniform/RandomUniform"
  input: "Final_decoder/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Initializer/random_uniform"
  op: "Add"
  input: "Final_decoder/weights/Initializer/random_uniform/mul"
  input: "Final_decoder/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Final_decoder/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 120
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Final_decoder/weights/Assign"
  op: "Assign"
  input: "Final_decoder/weights"
  input: "Final_decoder/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Final_decoder/weights/read"
  op: "Identity"
  input: "Final_decoder/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Final_decoder/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Final_decoder/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Final_decoder/biases/Assign"
  op: "Assign"
  input: "Final_decoder/biases"
  input: "Final_decoder/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Final_decoder/biases/read"
  op: "Identity"
  input: "Final_decoder/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Final_decoder/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000x\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/Final_decoder/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/Final_decoder/convolution"
  op: "Conv2D"
  input: "Net_prediction/crop_and_concat_6/Slice"
  input: "Final_decoder/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Net_prediction/Final_decoder/BiasAdd"
  op: "BiasAdd"
  input: "Net_prediction/Final_decoder/convolution"
  input: "Final_decoder/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Net_prediction/Final_decoder/Relu"
  op: "Relu"
  input: "Net_prediction/Final_decoder/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Net_prediction/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\014\000\000\000"
      }
    }
  }
}
node {
  name: "Net_prediction/Reshape"
  op: "Reshape"
  input: "Net_prediction/Final_decoder/Relu"
  input: "Net_prediction/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Output_Metrics/ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Output_Metrics/ArgMax"
  op: "ArgMax"
  input: "Net_prediction/Reshape"
  input: "Output_Metrics/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Output_Metrics/Placeholder"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 90000
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 90000
        }
      }
    }
  }
}
node {
  name: "Output_Metrics/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\220_\001\000"
      }
    }
  }
}
node {
  name: "Output_Metrics/Reshape"
  op: "Reshape"
  input: "Output_Metrics/ArgMax"
  input: "Output_Metrics/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 90000
          }
        }
      }
    }
  }
}
node {
  name: "Output_Metrics/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Output_Metrics/ArgMax_1"
  op: "ArgMax"
  input: "Placeholder_1"
  input: "Output_Metrics/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 90000
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Output_Metrics/Equal"
  op: "Equal"
  input: "Output_Metrics/Reshape"
  input: "Output_Metrics/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 90000
          }
        }
      }
    }
  }
}
node {
  name: "Output_Metrics/Cast"
  op: "Cast"
  input: "Output_Metrics/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 90000
          }
        }
      }
    }
  }
}
node {
  name: "Output_Metrics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Output_Metrics/Mean"
  op: "Mean"
  input: "Output_Metrics/Cast"
  input: "Output_Metrics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\014\000\000\000"
      }
    }
  }
}
node {
  name: "compute_loss/Reshape"
  op: "Reshape"
  input: "Placeholder_1"
  input: "compute_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019999999494757503
      }
    }
  }
}
node {
  name: "compute_loss/loss/Softmax"
  op: "Softmax"
  input: "Net_prediction/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/loss/add"
  op: "Add"
  input: "compute_loss/loss/Softmax"
  input: "compute_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/loss/Log"
  op: "Log"
  input: "compute_loss/loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/loss/mul"
  op: "Mul"
  input: "compute_loss/Reshape"
  input: "compute_loss/loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/loss/Mul"
  op: "Mul"
  input: "compute_loss/loss/mul"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "compute_loss/loss/Sum"
  op: "Sum"
  input: "compute_loss/loss/Mul"
  input: "compute_loss/loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/loss/Neg"
  op: "Neg"
  input: "compute_loss/loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "compute_loss/loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "compute_loss/loss/xentropy_mean"
  op: "Mean"
  input: "compute_loss/loss/Neg"
  input: "compute_loss/loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "compute_loss/loss/total_loss"
  op: "Identity"
  input: "compute_loss/loss/xentropy_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Training/add"
  op: "Add"
  input: "global_step/read"
  input: "Training/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/Assign"
  op: "Assign"
  input: "global_step"
  input: "Training/add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Training/ExponentialDecay/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019999999494757503
      }
    }
  }
}
node {
  name: "Training/ExponentialDecay/Cast"
  op: "Cast"
  input: "global_step/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 20500.0
      }
    }
  }
}
node {
  name: "Training/ExponentialDecay/Cast_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Training/ExponentialDecay/truediv"
  op: "RealDiv"
  input: "Training/ExponentialDecay/Cast"
  input: "Training/ExponentialDecay/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/ExponentialDecay/Floor"
  op: "Floor"
  input: "Training/ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/ExponentialDecay/Pow"
  op: "Pow"
  input: "Training/ExponentialDecay/Cast_2/x"
  input: "Training/ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/ExponentialDecay"
  op: "Mul"
  input: "Training/ExponentialDecay/learning_rate"
  input: "Training/ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Training/gradients/Fill"
  op: "Fill"
  input: "Training/gradients/Shape"
  input: "Training/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Fill"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Shape"
  op: "Shape"
  input: "compute_loss/loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Reshape"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Shape_1"
  op: "Shape"
  input: "compute_loss/loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Shape_1"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Shape_2"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Prod_1"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Prod"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/xentropy_mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Tile"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Neg_grad/Neg"
  op: "Neg"
  input: "Training/gradients/compute_loss/loss/xentropy_mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Shape"
  op: "Shape"
  input: "compute_loss/loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/add"
  op: "Add"
  input: "compute_loss/loss/Sum/reduction_indices"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/compute_loss/loss/Sum_grad/add"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/range"
  op: "Range"
  input: "Training/gradients/compute_loss/loss/Sum_grad/range/start"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Size"
  input: "Training/gradients/compute_loss/loss/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Fill"
  op: "Fill"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Shape_1"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/compute_loss/loss/Sum_grad/range"
  input: "Training/gradients/compute_loss/loss/Sum_grad/mod"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Shape"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/compute_loss/loss/Sum_grad/DynamicStitch"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Shape"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/Neg_grad/Neg"
  input: "Training/gradients/compute_loss/loss/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Sum_grad/Tile"
  op: "Tile"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Reshape"
  input: "Training/gradients/compute_loss/loss/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/Shape"
  op: "Shape"
  input: "compute_loss/loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/compute_loss/loss/Mul_grad/Shape"
  input: "Training/gradients/compute_loss/loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Tile"
  input: "Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/compute_loss/loss/Mul_grad/mul"
  input: "Training/gradients/compute_loss/loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/Mul_grad/Sum"
  input: "Training/gradients/compute_loss/loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/mul_1"
  op: "Mul"
  input: "compute_loss/loss/mul"
  input: "Training/gradients/compute_loss/loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/compute_loss/loss/Mul_grad/mul_1"
  input: "Training/gradients/compute_loss/loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/Mul_grad/Sum_1"
  input: "Training/gradients/compute_loss/loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/compute_loss/loss/Mul_grad/Reshape"
  input: "^Training/gradients/compute_loss/loss/Mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/compute_loss/loss/Mul_grad/Reshape"
  input: "^Training/gradients/compute_loss/loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/compute_loss/loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/compute_loss/loss/Mul_grad/Reshape_1"
  input: "^Training/gradients/compute_loss/loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/compute_loss/loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/Shape"
  op: "Shape"
  input: "compute_loss/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/Shape_1"
  op: "Shape"
  input: "compute_loss/loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/compute_loss/loss/mul_grad/Shape"
  input: "Training/gradients/compute_loss/loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/compute_loss/loss/Mul_grad/tuple/control_dependency"
  input: "compute_loss/loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/compute_loss/loss/mul_grad/mul"
  input: "Training/gradients/compute_loss/loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/mul_grad/Sum"
  input: "Training/gradients/compute_loss/loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/mul_1"
  op: "Mul"
  input: "compute_loss/Reshape"
  input: "Training/gradients/compute_loss/loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/compute_loss/loss/mul_grad/mul_1"
  input: "Training/gradients/compute_loss/loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/mul_grad/Sum_1"
  input: "Training/gradients/compute_loss/loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/compute_loss/loss/mul_grad/Reshape"
  input: "^Training/gradients/compute_loss/loss/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/compute_loss/loss/mul_grad/Reshape"
  input: "^Training/gradients/compute_loss/loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/compute_loss/loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/compute_loss/loss/mul_grad/Reshape_1"
  input: "^Training/gradients/compute_loss/loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/compute_loss/loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "compute_loss/loss/add"
  input: "^Training/gradients/compute_loss/loss/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Log_grad/mul"
  op: "Mul"
  input: "Training/gradients/compute_loss/loss/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/compute_loss/loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/Shape"
  op: "Shape"
  input: "compute_loss/loss/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/compute_loss/loss/add_grad/Shape"
  input: "Training/gradients/compute_loss/loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/compute_loss/loss/Log_grad/mul"
  input: "Training/gradients/compute_loss/loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/add_grad/Sum"
  input: "Training/gradients/compute_loss/loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/compute_loss/loss/Log_grad/mul"
  input: "Training/gradients/compute_loss/loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/add_grad/Sum_1"
  input: "Training/gradients/compute_loss/loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/compute_loss/loss/add_grad/Reshape"
  input: "^Training/gradients/compute_loss/loss/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/compute_loss/loss/add_grad/Reshape"
  input: "^Training/gradients/compute_loss/loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/compute_loss/loss/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/compute_loss/loss/add_grad/Reshape_1"
  input: "^Training/gradients/compute_loss/loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/compute_loss/loss/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Softmax_grad/mul"
  op: "Mul"
  input: "Training/gradients/compute_loss/loss/add_grad/tuple/control_dependency"
  input: "compute_loss/loss/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Softmax_grad/Sum"
  op: "Sum"
  input: "Training/gradients/compute_loss/loss/Softmax_grad/mul"
  input: "Training/gradients/compute_loss/loss/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Softmax_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Softmax_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/Softmax_grad/Sum"
  input: "Training/gradients/compute_loss/loss/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Softmax_grad/sub"
  op: "Sub"
  input: "Training/gradients/compute_loss/loss/add_grad/tuple/control_dependency"
  input: "Training/gradients/compute_loss/loss/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/compute_loss/loss/Softmax_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/compute_loss/loss/Softmax_grad/sub"
  input: "compute_loss/loss/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Reshape_grad/Shape"
  op: "Shape"
  input: "Net_prediction/Final_decoder/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/compute_loss/loss/Softmax_grad/mul_1"
  input: "Training/gradients/Net_prediction/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Training/gradients/Net_prediction/Reshape_grad/Reshape"
  input: "Net_prediction/Final_decoder/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Training/gradients/Net_prediction/Final_decoder/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/Final_decoder/Relu_grad/ReluGrad"
  input: "^Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/Final_decoder/Relu_grad/ReluGrad"
  input: "^Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/Final_decoder/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/BiasAddGrad"
  input: "^Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/Shape"
  op: "Shape"
  input: "Net_prediction/crop_and_concat_6/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/Shape"
  input: "Final_decoder/weights/read"
  input: "Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000x\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Net_prediction/crop_and_concat_6/Slice"
  input: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/Shape_1"
  input: "Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/Final_decoder/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/Final_decoder/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/Final_decoder/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/Final_decoder/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/Final_decoder/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/Final_decoder/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Shape"
  op: "Shape"
  input: "Net_prediction/crop_and_concat_6/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/stack"
  op: "Pack"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Rank"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Reshape"
  op: "Reshape"
  input: "Net_prediction/crop_and_concat_6/Slice/begin"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Shape_1"
  op: "Shape"
  input: "Net_prediction/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/sub"
  op: "Sub"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Shape_1"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/sub_1"
  op: "Sub"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/sub"
  input: "Net_prediction/crop_and_concat_6/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/sub_1"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/concat"
  op: "ConcatV2"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Reshape"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Reshape_1"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Pad"
  op: "Pad"
  input: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "Training/gradients/Net_prediction/crop_and_concat_6/Slice_grad/Pad"
  input: "Net_prediction/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Training/gradients/Net_prediction/Relu_3_grad/ReluGrad"
  input: "Net_prediction/Decoder44/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Training/gradients/Net_prediction/Decoder44/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/Decoder44/Relu_grad/ReluGrad"
  input: "^Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/Decoder44/Relu_grad/ReluGrad"
  input: "^Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/Decoder44/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/BiasAddGrad"
  input: "^Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000x\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Shape"
  input: "Net_prediction/conv_fused_Decoder43/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/tuple/control_dependency"
  input: "Decoder44/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Conv2D"
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Conv2D"
  input: "^Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/Conv2D"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "Net_prediction/conv_fused_Decoder43/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/conv_fused_Decoder43/Relu_grad/ReluGrad"
  input: "^Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/Relu_grad/ReluGrad"
  input: "^Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/conv_fused_Decoder43/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/BiasAddGrad"
  input: "^Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Shape"
  op: "Shape"
  input: "Net_prediction/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Shape"
  input: "conv_fused_Decoder43/weights/read"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Net_prediction/concat_2"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Shape_1"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 48
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/mod"
  op: "FloorMod"
  input: "Net_prediction/concat_2/axis"
  input: "Training/gradients/Net_prediction/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/Shape"
  op: "Shape"
  input: "Net_prediction/crop_and_concat_5/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/ShapeN"
  op: "ShapeN"
  input: "Net_prediction/crop_and_concat_5/Slice"
  input: "Net_prediction/inverted_bottleneck3_6_0/Add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Training/gradients/Net_prediction/concat_2_grad/mod"
  input: "Training/gradients/Net_prediction/concat_2_grad/ShapeN"
  input: "Training/gradients/Net_prediction/concat_2_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/Slice"
  op: "Slice"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/concat_2_grad/ConcatOffset"
  input: "Training/gradients/Net_prediction/concat_2_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/Slice_1"
  op: "Slice"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/concat_2_grad/ConcatOffset:1"
  input: "Training/gradients/Net_prediction/concat_2_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/concat_2_grad/Slice"
  input: "^Training/gradients/Net_prediction/concat_2_grad/Slice_1"
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/concat_2_grad/Slice"
  input: "^Training/gradients/Net_prediction/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/concat_2_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/concat_2_grad/Slice_1"
  input: "^Training/gradients/Net_prediction/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Shape"
  op: "Shape"
  input: "Net_prediction/crop_and_concat_5/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/stack"
  op: "Pack"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Rank"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Reshape"
  op: "Reshape"
  input: "Net_prediction/crop_and_concat_5/Slice/begin"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Shape_1"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/sub"
  op: "Sub"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Shape_1"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/sub_1"
  op: "Sub"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/sub"
  input: "Net_prediction/crop_and_concat_5/Slice/begin"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/sub_1"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/concat"
  op: "ConcatV2"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Reshape"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Reshape_1"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Pad"
  op: "Pad"
  input: "Training/gradients/Net_prediction/concat_2_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN"
  op: "AddN"
  input: "Training/gradients/Net_prediction/concat_2_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/crop_and_concat_5/Slice_grad/Pad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/concat_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_1"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_2"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Shape"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/read"
  input: "Training/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/Relu6"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Shape_1"
  input: "Training/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_3"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_4"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/read"
  input: "Training/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/Relu6"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "Training/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_5"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck3_6_0/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_6"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Shape"
  input: "inverted_bottleneck3_6_0/Conv/weights/read"
  input: "Training/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Shape_1"
  input: "Training/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_7"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/AddN_7"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/AddN_7"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_8"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_9"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Shape"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/read"
  input: "Training/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/Relu6"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Shape_1"
  input: "Training/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_10"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_11"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/read"
  input: "Training/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/Relu6"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  input: "Training/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_12"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck2_6_1/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_13"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Shape"
  input: "inverted_bottleneck2_6_1/Conv/weights/read"
  input: "Training/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Shape_1"
  input: "Training/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_14"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_15"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Shape"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/read"
  input: "Training/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/Relu6"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Shape_1"
  input: "Training/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_16"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_17"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/read"
  input: "Training/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/Relu6"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "Training/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/Relu6_grad/Relu6Grad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_18"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/inverted_bottleneck1_1_0/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_19"
  op: "AddN"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Shape"
  op: "Shape"
  input: "Net_prediction/First_conv/Conv/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Shape"
  input: "inverted_bottleneck1_1_0/Conv/weights/read"
  input: "Training/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Net_prediction/First_conv/Conv/Relu"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Shape_1"
  input: "Training/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/tuple/control_dependency"
  input: "Net_prediction/First_conv/Conv/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/Relu_grad/ReluGrad"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/Relu_grad/ReluGrad"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  op: "Shape"
  input: "Net_prediction/First_conv/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/mul"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/First_conv/Conv/convolution"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/mul_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Sum_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Neg"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/mul"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/mul_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Sum_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_20"
  op: "AddN"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt"
  input: "Training/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Sum_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/add_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape"
  op: "Shape"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/add"
  op: "Add"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/variance/reduction_indices"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/add"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/range/start"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Size"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/range"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/mod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_1_grad/Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape_2"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Shape_3"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Prod_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Prod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Tile"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Net_prediction/First_conv/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/scalar"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Net_prediction/First_conv/Conv/convolution"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/StopGradient"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/mul"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/mul_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Sum_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape"
  op: "Shape"
  input: "Net_prediction/First_conv/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/add"
  op: "Add"
  input: "Net_prediction/First_conv/Conv/BatchNorm/moments/mean/reduction_indices"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/mod"
  op: "FloorMod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/add"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/range"
  op: "Range"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/range/start"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Size"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Fill"
  op: "Fill"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/range"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/mod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/Squeeze_grad/Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Tile"
  op: "Tile"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Reshape"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "Net_prediction/First_conv/Conv/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Prod"
  op: "Prod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape_2"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Shape_3"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Prod_1"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Prod"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Cast"
  op: "Cast"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Tile"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/AddN_21"
  op: "AddN"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Shape"
  op: "Shape"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Shape"
  input: "First_conv/Conv/weights/read"
  input: "Training/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Placeholder"
  input: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Shape_1"
  input: "Training/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Conv2DBackpropFilter"
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Conv2DBackpropInput"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 300
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Conv2DBackpropFilter"
  input: "^Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Training/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Training/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Training/beta1_power/Assign"
  op: "Assign"
  input: "Training/beta1_power"
  input: "Training/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Training/beta1_power/read"
  op: "Identity"
  input: "Training/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Training/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Training/beta2_power/Assign"
  op: "Assign"
  input: "Training/beta2_power"
  input: "Training/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Training/beta2_power/read"
  op: "Identity"
  input: "Training/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "First_conv/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "First_conv/Conv/weights/Adam"
  input: "First_conv/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/weights/Adam/read"
  op: "Identity"
  input: "First_conv/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "First_conv/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "First_conv/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "First_conv/Conv/weights/Adam_1"
  input: "First_conv/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "First_conv/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "First_conv/Conv/BatchNorm/beta/Adam"
  input: "First_conv/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "First_conv/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "First_conv/Conv/BatchNorm/beta/Adam_1"
  input: "First_conv/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "First_conv/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "First_conv/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Adam/Assign"
  op: "Assign"
  input: "conv_fused_Decoder43/weights/Adam"
  input: "conv_fused_Decoder43/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Adam/read"
  op: "Identity"
  input: "conv_fused_Decoder43/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 48
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Adam_1/Assign"
  op: "Assign"
  input: "conv_fused_Decoder43/weights/Adam_1"
  input: "conv_fused_Decoder43/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder43/weights/Adam_1/read"
  op: "Identity"
  input: "conv_fused_Decoder43/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Adam/Assign"
  op: "Assign"
  input: "conv_fused_Decoder43/biases/Adam"
  input: "conv_fused_Decoder43/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Adam/read"
  op: "Identity"
  input: "conv_fused_Decoder43/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Adam_1/Assign"
  op: "Assign"
  input: "conv_fused_Decoder43/biases/Adam_1"
  input: "conv_fused_Decoder43/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_fused_Decoder43/biases/Adam_1/read"
  op: "Identity"
  input: "conv_fused_Decoder43/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Decoder44/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder44/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 120
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder44/weights/Adam/Assign"
  op: "Assign"
  input: "Decoder44/weights/Adam"
  input: "Decoder44/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder44/weights/Adam/read"
  op: "Identity"
  input: "Decoder44/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Decoder44/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder44/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 120
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder44/weights/Adam_1/Assign"
  op: "Assign"
  input: "Decoder44/weights/Adam_1"
  input: "Decoder44/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder44/weights/Adam_1/read"
  op: "Identity"
  input: "Decoder44/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
}
node {
  name: "Decoder44/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder44/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder44/biases/Adam/Assign"
  op: "Assign"
  input: "Decoder44/biases/Adam"
  input: "Decoder44/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder44/biases/Adam/read"
  op: "Identity"
  input: "Decoder44/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Decoder44/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder44/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder44/biases/Adam_1/Assign"
  op: "Assign"
  input: "Decoder44/biases/Adam_1"
  input: "Decoder44/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder44/biases/Adam_1/read"
  op: "Identity"
  input: "Decoder44/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 120
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Final_decoder/weights/Adam/Assign"
  op: "Assign"
  input: "Final_decoder/weights/Adam"
  input: "Final_decoder/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Final_decoder/weights/Adam/read"
  op: "Identity"
  input: "Final_decoder/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Final_decoder/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 120
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Final_decoder/weights/Adam_1/Assign"
  op: "Assign"
  input: "Final_decoder/weights/Adam_1"
  input: "Final_decoder/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Final_decoder/weights/Adam_1/read"
  op: "Identity"
  input: "Final_decoder/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Final_decoder/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Final_decoder/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Final_decoder/biases/Adam/Assign"
  op: "Assign"
  input: "Final_decoder/biases/Adam"
  input: "Final_decoder/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Final_decoder/biases/Adam/read"
  op: "Identity"
  input: "Final_decoder/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Final_decoder/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Final_decoder/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Final_decoder/biases/Adam_1/Assign"
  op: "Assign"
  input: "Final_decoder/biases/Adam_1"
  input: "Final_decoder/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Final_decoder/biases/Adam_1/read"
  op: "Identity"
  input: "Final_decoder/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Training/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Training/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Training/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Training/Adam/update_First_conv/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "First_conv/Conv/weights"
  input: "First_conv/Conv/weights/Adam"
  input: "First_conv/Conv/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/First_conv/Conv/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_First_conv/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "First_conv/Conv/BatchNorm/beta"
  input: "First_conv/Conv/BatchNorm/beta/Adam"
  input: "First_conv/Conv/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/First_conv/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck1_1_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_1_0/Conv/weights"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck1_1_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck1_1_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_1_0/Conv_1/weights"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck1_1_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck2_6_1/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_1/Conv/weights"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck2_6_1/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck2_6_1/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_1/Conv_1/weights"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck2_6_1/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck3_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_0/Conv/weights"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck3_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck3_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_0/Conv_1/weights"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/inverted_bottleneck3_6_0/Conv_1/BatchNorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_conv_fused_Decoder43/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_fused_Decoder43/weights"
  input: "conv_fused_Decoder43/weights/Adam"
  input: "conv_fused_Decoder43/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_conv_fused_Decoder43/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_fused_Decoder43/biases"
  input: "conv_fused_Decoder43/biases/Adam"
  input: "conv_fused_Decoder43/biases/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/conv_fused_Decoder43/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_Decoder44/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "Decoder44/weights"
  input: "Decoder44/weights/Adam"
  input: "Decoder44/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/Decoder44/conv2d_transpose_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_Decoder44/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "Decoder44/biases"
  input: "Decoder44/biases/Adam"
  input: "Decoder44/biases/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/Decoder44/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_Final_decoder/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "Final_decoder/weights"
  input: "Final_decoder/weights/Adam"
  input: "Final_decoder/weights/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/Final_decoder/convolution_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/update_Final_decoder/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "Final_decoder/biases"
  input: "Final_decoder/biases/Adam"
  input: "Final_decoder/biases/Adam_1"
  input: "Training/beta1_power/read"
  input: "Training/beta2_power/read"
  input: "Training/ExponentialDecay"
  input: "Training/Adam/beta1"
  input: "Training/Adam/beta2"
  input: "Training/Adam/epsilon"
  input: "Training/gradients/Net_prediction/Final_decoder/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Training/Adam/mul"
  op: "Mul"
  input: "Training/beta1_power/read"
  input: "Training/Adam/beta1"
  input: "^Training/Adam/update_First_conv/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_First_conv/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_conv_fused_Decoder43/weights/ApplyAdam"
  input: "^Training/Adam/update_conv_fused_Decoder43/biases/ApplyAdam"
  input: "^Training/Adam/update_Decoder44/weights/ApplyAdam"
  input: "^Training/Adam/update_Decoder44/biases/ApplyAdam"
  input: "^Training/Adam/update_Final_decoder/weights/ApplyAdam"
  input: "^Training/Adam/update_Final_decoder/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/Adam/Assign"
  op: "Assign"
  input: "Training/beta1_power"
  input: "Training/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Training/Adam/mul_1"
  op: "Mul"
  input: "Training/beta2_power/read"
  input: "Training/Adam/beta2"
  input: "^Training/Adam/update_First_conv/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_First_conv/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_conv_fused_Decoder43/weights/ApplyAdam"
  input: "^Training/Adam/update_conv_fused_Decoder43/biases/ApplyAdam"
  input: "^Training/Adam/update_Decoder44/weights/ApplyAdam"
  input: "^Training/Adam/update_Decoder44/biases/ApplyAdam"
  input: "^Training/Adam/update_Final_decoder/weights/ApplyAdam"
  input: "^Training/Adam/update_Final_decoder/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Training/Adam/Assign_1"
  op: "Assign"
  input: "Training/beta2_power"
  input: "Training/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Training/Adam"
  op: "NoOp"
  input: "^Training/Adam/update_First_conv/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_First_conv/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv_1/weights/ApplyAdam"
  input: "^Training/Adam/update_inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^Training/Adam/update_conv_fused_Decoder43/weights/ApplyAdam"
  input: "^Training/Adam/update_conv_fused_Decoder43/biases/ApplyAdam"
  input: "^Training/Adam/update_Decoder44/weights/ApplyAdam"
  input: "^Training/Adam/update_Decoder44/biases/ApplyAdam"
  input: "^Training/Adam/update_Final_decoder/weights/ApplyAdam"
  input: "^Training/Adam/update_Final_decoder/biases/ApplyAdam"
  input: "^Training/Adam/Assign"
  input: "^Training/Adam/Assign_1"
}
node {
  name: "total_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "total_loss"
      }
    }
  }
}
node {
  name: "total_loss"
  op: "ScalarSummary"
  input: "total_loss/tags"
  input: "compute_loss/loss/total_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Output_Metrics/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "total_loss"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parameter_count/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod"
  op: "Prod"
  input: "parameter_count/Shape"
  input: "parameter_count/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_1"
  op: "Prod"
  input: "parameter_count/Shape_1"
  input: "parameter_count/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_2"
  op: "Prod"
  input: "parameter_count/Shape_2"
  input: "parameter_count/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_3"
  op: "Prod"
  input: "parameter_count/Shape_3"
  input: "parameter_count/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_4"
  op: "Prod"
  input: "parameter_count/Shape_4"
  input: "parameter_count/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_5"
  op: "Prod"
  input: "parameter_count/Shape_5"
  input: "parameter_count/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_6"
  op: "Prod"
  input: "parameter_count/Shape_6"
  input: "parameter_count/Const_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "parameter_count/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_7"
  op: "Prod"
  input: "parameter_count/Shape_7"
  input: "parameter_count/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_8"
  op: "Prod"
  input: "parameter_count/Shape_8"
  input: "parameter_count/Const_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "parameter_count/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_9"
  op: "Prod"
  input: "parameter_count/Shape_9"
  input: "parameter_count/Const_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_10"
  op: "Prod"
  input: "parameter_count/Shape_10"
  input: "parameter_count/Const_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "parameter_count/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_11"
  op: "Prod"
  input: "parameter_count/Shape_11"
  input: "parameter_count/Const_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_12"
  op: "Prod"
  input: "parameter_count/Shape_12"
  input: "parameter_count/Const_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "parameter_count/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_13"
  op: "Prod"
  input: "parameter_count/Shape_13"
  input: "parameter_count/Const_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_14"
  op: "Prod"
  input: "parameter_count/Shape_14"
  input: "parameter_count/Const_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "parameter_count/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_15"
  op: "Prod"
  input: "parameter_count/Shape_15"
  input: "parameter_count/Const_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_16"
  op: "Prod"
  input: "parameter_count/Shape_16"
  input: "parameter_count/Const_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "parameter_count/Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_17"
  op: "Prod"
  input: "parameter_count/Shape_17"
  input: "parameter_count/Const_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_18"
  op: "Prod"
  input: "parameter_count/Shape_18"
  input: "parameter_count/Const_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "parameter_count/Const_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_19"
  op: "Prod"
  input: "parameter_count/Shape_19"
  input: "parameter_count/Const_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_20"
  op: "Prod"
  input: "parameter_count/Shape_20"
  input: "parameter_count/Const_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "parameter_count/Const_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_21"
  op: "Prod"
  input: "parameter_count/Shape_21"
  input: "parameter_count/Const_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_22"
  op: "Prod"
  input: "parameter_count/Shape_22"
  input: "parameter_count/Const_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "parameter_count/Const_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_23"
  op: "Prod"
  input: "parameter_count/Shape_23"
  input: "parameter_count/Const_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_24"
  op: "Prod"
  input: "parameter_count/Shape_24"
  input: "parameter_count/Const_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_25"
  op: "Prod"
  input: "parameter_count/Shape_25"
  input: "parameter_count/Const_25"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_26"
  op: "Prod"
  input: "parameter_count/Shape_26"
  input: "parameter_count/Const_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "parameter_count/Const_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_27"
  op: "Prod"
  input: "parameter_count/Shape_27"
  input: "parameter_count/Const_27"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_28"
  op: "Prod"
  input: "parameter_count/Shape_28"
  input: "parameter_count/Const_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "parameter_count/Const_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_29"
  op: "Prod"
  input: "parameter_count/Shape_29"
  input: "parameter_count/Const_29"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_30"
  op: "Prod"
  input: "parameter_count/Shape_30"
  input: "parameter_count/Const_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "parameter_count/Const_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_31"
  op: "Prod"
  input: "parameter_count/Shape_31"
  input: "parameter_count/Const_31"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_32"
  op: "Prod"
  input: "parameter_count/Shape_32"
  input: "parameter_count/Const_32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "parameter_count/Const_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_33"
  op: "Prod"
  input: "parameter_count/Shape_33"
  input: "parameter_count/Const_33"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_34"
  op: "Prod"
  input: "parameter_count/Shape_34"
  input: "parameter_count/Const_34"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "parameter_count/Const_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_35"
  op: "Prod"
  input: "parameter_count/Shape_35"
  input: "parameter_count/Const_35"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_36"
  op: "Prod"
  input: "parameter_count/Shape_36"
  input: "parameter_count/Const_36"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_37"
  op: "Prod"
  input: "parameter_count/Shape_37"
  input: "parameter_count/Const_37"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_38"
  op: "Prod"
  input: "parameter_count/Shape_38"
  input: "parameter_count/Const_38"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "parameter_count/Const_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_39"
  op: "Prod"
  input: "parameter_count/Shape_39"
  input: "parameter_count/Const_39"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_40"
  op: "Prod"
  input: "parameter_count/Shape_40"
  input: "parameter_count/Const_40"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "parameter_count/Const_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_41"
  op: "Prod"
  input: "parameter_count/Shape_41"
  input: "parameter_count/Const_41"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_42"
  op: "Prod"
  input: "parameter_count/Shape_42"
  input: "parameter_count/Const_42"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_43"
  op: "Prod"
  input: "parameter_count/Shape_43"
  input: "parameter_count/Const_43"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_44"
  op: "Prod"
  input: "parameter_count/Shape_44"
  input: "parameter_count/Const_44"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "parameter_count/Const_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_45"
  op: "Prod"
  input: "parameter_count/Shape_45"
  input: "parameter_count/Const_45"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_46"
  op: "Prod"
  input: "parameter_count/Shape_46"
  input: "parameter_count/Const_46"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "parameter_count/Const_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_47"
  op: "Prod"
  input: "parameter_count/Shape_47"
  input: "parameter_count/Const_47"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_48"
  op: "Prod"
  input: "parameter_count/Shape_48"
  input: "parameter_count/Const_48"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_49"
  op: "Prod"
  input: "parameter_count/Shape_49"
  input: "parameter_count/Const_49"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_50"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_50"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_50"
  op: "Prod"
  input: "parameter_count/Shape_50"
  input: "parameter_count/Const_50"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_51"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "parameter_count/Const_51"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_51"
  op: "Prod"
  input: "parameter_count/Shape_51"
  input: "parameter_count/Const_51"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_52"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_52"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_52"
  op: "Prod"
  input: "parameter_count/Shape_52"
  input: "parameter_count/Const_52"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_53"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "parameter_count/Const_53"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_53"
  op: "Prod"
  input: "parameter_count/Shape_53"
  input: "parameter_count/Const_53"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_54"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_54"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_54"
  op: "Prod"
  input: "parameter_count/Shape_54"
  input: "parameter_count/Const_54"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_55"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "parameter_count/Const_55"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_55"
  op: "Prod"
  input: "parameter_count/Shape_55"
  input: "parameter_count/Const_55"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_56"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_56"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_56"
  op: "Prod"
  input: "parameter_count/Shape_56"
  input: "parameter_count/Const_56"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_57"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "parameter_count/Const_57"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_57"
  op: "Prod"
  input: "parameter_count/Shape_57"
  input: "parameter_count/Const_57"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_58"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_58"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_58"
  op: "Prod"
  input: "parameter_count/Shape_58"
  input: "parameter_count/Const_58"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_59"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "parameter_count/Const_59"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_59"
  op: "Prod"
  input: "parameter_count/Shape_59"
  input: "parameter_count/Const_59"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_60"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_60"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_60"
  op: "Prod"
  input: "parameter_count/Shape_60"
  input: "parameter_count/Const_60"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_61"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "parameter_count/Const_61"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_61"
  op: "Prod"
  input: "parameter_count/Shape_61"
  input: "parameter_count/Const_61"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_62"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_62"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_62"
  op: "Prod"
  input: "parameter_count/Shape_62"
  input: "parameter_count/Const_62"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_63"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "parameter_count/Const_63"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_63"
  op: "Prod"
  input: "parameter_count/Shape_63"
  input: "parameter_count/Const_63"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_64"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_64"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_64"
  op: "Prod"
  input: "parameter_count/Shape_64"
  input: "parameter_count/Const_64"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_65"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "parameter_count/Const_65"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_65"
  op: "Prod"
  input: "parameter_count/Shape_65"
  input: "parameter_count/Const_65"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_66"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_66"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_66"
  op: "Prod"
  input: "parameter_count/Shape_66"
  input: "parameter_count/Const_66"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_67"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "parameter_count/Const_67"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_67"
  op: "Prod"
  input: "parameter_count/Shape_67"
  input: "parameter_count/Const_67"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_68"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_68"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_68"
  op: "Prod"
  input: "parameter_count/Shape_68"
  input: "parameter_count/Const_68"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_69"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "parameter_count/Const_69"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_69"
  op: "Prod"
  input: "parameter_count/Shape_69"
  input: "parameter_count/Const_69"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_70"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_70"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_70"
  op: "Prod"
  input: "parameter_count/Shape_70"
  input: "parameter_count/Const_70"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_71"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "parameter_count/Const_71"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_71"
  op: "Prod"
  input: "parameter_count/Shape_71"
  input: "parameter_count/Const_71"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_72"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_72"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_72"
  op: "Prod"
  input: "parameter_count/Shape_72"
  input: "parameter_count/Const_72"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_73"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "parameter_count/Const_73"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_73"
  op: "Prod"
  input: "parameter_count/Shape_73"
  input: "parameter_count/Const_73"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_74"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_74"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_74"
  op: "Prod"
  input: "parameter_count/Shape_74"
  input: "parameter_count/Const_74"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_75"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "parameter_count/Const_75"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_75"
  op: "Prod"
  input: "parameter_count/Shape_75"
  input: "parameter_count/Const_75"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_76"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_76"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_76"
  op: "Prod"
  input: "parameter_count/Shape_76"
  input: "parameter_count/Const_76"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_77"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "parameter_count/Const_77"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_77"
  op: "Prod"
  input: "parameter_count/Shape_77"
  input: "parameter_count/Const_77"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_78"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_78"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_78"
  op: "Prod"
  input: "parameter_count/Shape_78"
  input: "parameter_count/Const_78"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_79"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "parameter_count/Const_79"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_79"
  op: "Prod"
  input: "parameter_count/Shape_79"
  input: "parameter_count/Const_79"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_80"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_80"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_80"
  op: "Prod"
  input: "parameter_count/Shape_80"
  input: "parameter_count/Const_80"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_81"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "parameter_count/Const_81"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_81"
  op: "Prod"
  input: "parameter_count/Shape_81"
  input: "parameter_count/Const_81"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_82"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_82"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_82"
  op: "Prod"
  input: "parameter_count/Shape_82"
  input: "parameter_count/Const_82"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_83"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "parameter_count/Const_83"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_83"
  op: "Prod"
  input: "parameter_count/Shape_83"
  input: "parameter_count/Const_83"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_84"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_84"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_84"
  op: "Prod"
  input: "parameter_count/Shape_84"
  input: "parameter_count/Const_84"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_85"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "parameter_count/Const_85"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_85"
  op: "Prod"
  input: "parameter_count/Shape_85"
  input: "parameter_count/Const_85"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_86"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_86"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_86"
  op: "Prod"
  input: "parameter_count/Shape_86"
  input: "parameter_count/Const_86"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_87"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "parameter_count/Const_87"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_87"
  op: "Prod"
  input: "parameter_count/Shape_87"
  input: "parameter_count/Const_87"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_88"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_88"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_88"
  op: "Prod"
  input: "parameter_count/Shape_88"
  input: "parameter_count/Const_88"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_89"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "parameter_count/Const_89"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_89"
  op: "Prod"
  input: "parameter_count/Shape_89"
  input: "parameter_count/Const_89"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_90"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_90"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_90"
  op: "Prod"
  input: "parameter_count/Shape_90"
  input: "parameter_count/Const_90"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_91"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "parameter_count/Const_91"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_91"
  op: "Prod"
  input: "parameter_count/Shape_91"
  input: "parameter_count/Const_91"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_92"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_92"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_92"
  op: "Prod"
  input: "parameter_count/Shape_92"
  input: "parameter_count/Const_92"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_93"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "parameter_count/Const_93"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_93"
  op: "Prod"
  input: "parameter_count/Shape_93"
  input: "parameter_count/Const_93"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_94"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_94"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_94"
  op: "Prod"
  input: "parameter_count/Shape_94"
  input: "parameter_count/Const_94"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_95"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "parameter_count/Const_95"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_95"
  op: "Prod"
  input: "parameter_count/Shape_95"
  input: "parameter_count/Const_95"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_96"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_96"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_96"
  op: "Prod"
  input: "parameter_count/Shape_96"
  input: "parameter_count/Const_96"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_97"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 320
      }
    }
  }
}
node {
  name: "parameter_count/Const_97"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_97"
  op: "Prod"
  input: "parameter_count/Shape_97"
  input: "parameter_count/Const_97"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_98"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_98"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_98"
  op: "Prod"
  input: "parameter_count/Shape_98"
  input: "parameter_count/Const_98"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_99"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_99"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_99"
  op: "Prod"
  input: "parameter_count/Shape_99"
  input: "parameter_count/Const_99"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_100"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_100"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_100"
  op: "Prod"
  input: "parameter_count/Shape_100"
  input: "parameter_count/Const_100"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_101"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_101"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_101"
  op: "Prod"
  input: "parameter_count/Shape_101"
  input: "parameter_count/Const_101"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_102"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\240\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_102"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_102"
  op: "Prod"
  input: "parameter_count/Shape_102"
  input: "parameter_count/Const_102"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_103"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "parameter_count/Const_103"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_103"
  op: "Prod"
  input: "parameter_count/Shape_103"
  input: "parameter_count/Const_103"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_104"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_104"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_104"
  op: "Prod"
  input: "parameter_count/Shape_104"
  input: "parameter_count/Const_104"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_105"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "parameter_count/Const_105"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_105"
  op: "Prod"
  input: "parameter_count/Shape_105"
  input: "parameter_count/Const_105"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_106"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_106"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_106"
  op: "Prod"
  input: "parameter_count/Shape_106"
  input: "parameter_count/Const_106"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_107"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "parameter_count/Const_107"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_107"
  op: "Prod"
  input: "parameter_count/Shape_107"
  input: "parameter_count/Const_107"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_108"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_108"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_108"
  op: "Prod"
  input: "parameter_count/Shape_108"
  input: "parameter_count/Const_108"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_109"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "parameter_count/Const_109"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_109"
  op: "Prod"
  input: "parameter_count/Shape_109"
  input: "parameter_count/Const_109"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_110"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000x\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_110"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_110"
  op: "Prod"
  input: "parameter_count/Shape_110"
  input: "parameter_count/Const_110"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_111"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 120
      }
    }
  }
}
node {
  name: "parameter_count/Const_111"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_111"
  op: "Prod"
  input: "parameter_count/Shape_111"
  input: "parameter_count/Const_111"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_112"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000x\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_112"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_112"
  op: "Prod"
  input: "parameter_count/Shape_112"
  input: "parameter_count/Const_112"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_113"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "parameter_count/Const_113"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_113"
  op: "Prod"
  input: "parameter_count/Shape_113"
  input: "parameter_count/Const_113"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Rank/packed"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  input: "parameter_count/Prod_36"
  input: "parameter_count/Prod_37"
  input: "parameter_count/Prod_38"
  input: "parameter_count/Prod_39"
  input: "parameter_count/Prod_40"
  input: "parameter_count/Prod_41"
  input: "parameter_count/Prod_42"
  input: "parameter_count/Prod_43"
  input: "parameter_count/Prod_44"
  input: "parameter_count/Prod_45"
  input: "parameter_count/Prod_46"
  input: "parameter_count/Prod_47"
  input: "parameter_count/Prod_48"
  input: "parameter_count/Prod_49"
  input: "parameter_count/Prod_50"
  input: "parameter_count/Prod_51"
  input: "parameter_count/Prod_52"
  input: "parameter_count/Prod_53"
  input: "parameter_count/Prod_54"
  input: "parameter_count/Prod_55"
  input: "parameter_count/Prod_56"
  input: "parameter_count/Prod_57"
  input: "parameter_count/Prod_58"
  input: "parameter_count/Prod_59"
  input: "parameter_count/Prod_60"
  input: "parameter_count/Prod_61"
  input: "parameter_count/Prod_62"
  input: "parameter_count/Prod_63"
  input: "parameter_count/Prod_64"
  input: "parameter_count/Prod_65"
  input: "parameter_count/Prod_66"
  input: "parameter_count/Prod_67"
  input: "parameter_count/Prod_68"
  input: "parameter_count/Prod_69"
  input: "parameter_count/Prod_70"
  input: "parameter_count/Prod_71"
  input: "parameter_count/Prod_72"
  input: "parameter_count/Prod_73"
  input: "parameter_count/Prod_74"
  input: "parameter_count/Prod_75"
  input: "parameter_count/Prod_76"
  input: "parameter_count/Prod_77"
  input: "parameter_count/Prod_78"
  input: "parameter_count/Prod_79"
  input: "parameter_count/Prod_80"
  input: "parameter_count/Prod_81"
  input: "parameter_count/Prod_82"
  input: "parameter_count/Prod_83"
  input: "parameter_count/Prod_84"
  input: "parameter_count/Prod_85"
  input: "parameter_count/Prod_86"
  input: "parameter_count/Prod_87"
  input: "parameter_count/Prod_88"
  input: "parameter_count/Prod_89"
  input: "parameter_count/Prod_90"
  input: "parameter_count/Prod_91"
  input: "parameter_count/Prod_92"
  input: "parameter_count/Prod_93"
  input: "parameter_count/Prod_94"
  input: "parameter_count/Prod_95"
  input: "parameter_count/Prod_96"
  input: "parameter_count/Prod_97"
  input: "parameter_count/Prod_98"
  input: "parameter_count/Prod_99"
  input: "parameter_count/Prod_100"
  input: "parameter_count/Prod_101"
  input: "parameter_count/Prod_102"
  input: "parameter_count/Prod_103"
  input: "parameter_count/Prod_104"
  input: "parameter_count/Prod_105"
  input: "parameter_count/Prod_106"
  input: "parameter_count/Prod_107"
  input: "parameter_count/Prod_108"
  input: "parameter_count/Prod_109"
  input: "parameter_count/Prod_110"
  input: "parameter_count/Prod_111"
  input: "parameter_count/Prod_112"
  input: "parameter_count/Prod_113"
  attr {
    key: "N"
    value {
      i: 114
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 114
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range"
  op: "Range"
  input: "parameter_count/range/start"
  input: "parameter_count/Rank"
  input: "parameter_count/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "parameter_count/Sum/input"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  input: "parameter_count/Prod_36"
  input: "parameter_count/Prod_37"
  input: "parameter_count/Prod_38"
  input: "parameter_count/Prod_39"
  input: "parameter_count/Prod_40"
  input: "parameter_count/Prod_41"
  input: "parameter_count/Prod_42"
  input: "parameter_count/Prod_43"
  input: "parameter_count/Prod_44"
  input: "parameter_count/Prod_45"
  input: "parameter_count/Prod_46"
  input: "parameter_count/Prod_47"
  input: "parameter_count/Prod_48"
  input: "parameter_count/Prod_49"
  input: "parameter_count/Prod_50"
  input: "parameter_count/Prod_51"
  input: "parameter_count/Prod_52"
  input: "parameter_count/Prod_53"
  input: "parameter_count/Prod_54"
  input: "parameter_count/Prod_55"
  input: "parameter_count/Prod_56"
  input: "parameter_count/Prod_57"
  input: "parameter_count/Prod_58"
  input: "parameter_count/Prod_59"
  input: "parameter_count/Prod_60"
  input: "parameter_count/Prod_61"
  input: "parameter_count/Prod_62"
  input: "parameter_count/Prod_63"
  input: "parameter_count/Prod_64"
  input: "parameter_count/Prod_65"
  input: "parameter_count/Prod_66"
  input: "parameter_count/Prod_67"
  input: "parameter_count/Prod_68"
  input: "parameter_count/Prod_69"
  input: "parameter_count/Prod_70"
  input: "parameter_count/Prod_71"
  input: "parameter_count/Prod_72"
  input: "parameter_count/Prod_73"
  input: "parameter_count/Prod_74"
  input: "parameter_count/Prod_75"
  input: "parameter_count/Prod_76"
  input: "parameter_count/Prod_77"
  input: "parameter_count/Prod_78"
  input: "parameter_count/Prod_79"
  input: "parameter_count/Prod_80"
  input: "parameter_count/Prod_81"
  input: "parameter_count/Prod_82"
  input: "parameter_count/Prod_83"
  input: "parameter_count/Prod_84"
  input: "parameter_count/Prod_85"
  input: "parameter_count/Prod_86"
  input: "parameter_count/Prod_87"
  input: "parameter_count/Prod_88"
  input: "parameter_count/Prod_89"
  input: "parameter_count/Prod_90"
  input: "parameter_count/Prod_91"
  input: "parameter_count/Prod_92"
  input: "parameter_count/Prod_93"
  input: "parameter_count/Prod_94"
  input: "parameter_count/Prod_95"
  input: "parameter_count/Prod_96"
  input: "parameter_count/Prod_97"
  input: "parameter_count/Prod_98"
  input: "parameter_count/Prod_99"
  input: "parameter_count/Prod_100"
  input: "parameter_count/Prod_101"
  input: "parameter_count/Prod_102"
  input: "parameter_count/Prod_103"
  input: "parameter_count/Prod_104"
  input: "parameter_count/Prod_105"
  input: "parameter_count/Prod_106"
  input: "parameter_count/Prod_107"
  input: "parameter_count/Prod_108"
  input: "parameter_count/Prod_109"
  input: "parameter_count/Prod_110"
  input: "parameter_count/Prod_111"
  input: "parameter_count/Prod_112"
  input: "parameter_count/Prod_113"
  attr {
    key: "N"
    value {
      i: 114
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 114
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Sum"
  op: "Sum"
  input: "parameter_count/Sum/input"
  input: "parameter_count/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 114
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 114
          }
        }
        string_val: "Decoder41/biases"
        string_val: "Decoder41/weights"
        string_val: "Decoder42/biases"
        string_val: "Decoder42/weights"
        string_val: "Decoder43/biases"
        string_val: "Decoder43/weights"
        string_val: "Decoder44/biases"
        string_val: "Decoder44/weights"
        string_val: "Final_decoder/biases"
        string_val: "Final_decoder/weights"
        string_val: "First_conv/Conv/BatchNorm/beta"
        string_val: "First_conv/Conv/weights"
        string_val: "conv_fused_Decoder41/biases"
        string_val: "conv_fused_Decoder41/weights"
        string_val: "conv_fused_Decoder42/biases"
        string_val: "conv_fused_Decoder42/weights"
        string_val: "conv_fused_Decoder43/biases"
        string_val: "conv_fused_Decoder43/weights"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv/weights"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv/weights"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv/weights"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv/weights"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv/weights"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv/weights"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv/weights"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/Conv/weights"
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/Conv_1/weights"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/Conv/weights"
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/Conv/weights"
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/Conv/weights"
        string_val: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv/weights"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv/weights"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv/weights"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv/weights"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv/weights"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 114
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 114
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Decoder41/biases"
  input: "Decoder41/weights"
  input: "Decoder42/biases"
  input: "Decoder42/weights"
  input: "Decoder43/biases"
  input: "Decoder43/weights"
  input: "Decoder44/biases"
  input: "Decoder44/weights"
  input: "Final_decoder/biases"
  input: "Final_decoder/weights"
  input: "First_conv/Conv/BatchNorm/beta"
  input: "First_conv/Conv/weights"
  input: "conv_fused_Decoder41/biases"
  input: "conv_fused_Decoder41/weights"
  input: "conv_fused_Decoder42/biases"
  input: "conv_fused_Decoder42/weights"
  input: "conv_fused_Decoder43/biases"
  input: "conv_fused_Decoder43/weights"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/Conv/weights"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/Conv_1/weights"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/Conv/weights"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/Conv_1/weights"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/Conv/weights"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/Conv_1/weights"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/Conv/weights"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/Conv_1/weights"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder41/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Decoder41/biases"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder41/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Decoder41/weights"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder42/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Decoder42/biases"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder42/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Decoder42/weights"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 160
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder43/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Decoder43/biases"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder43/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Decoder43/weights"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder44/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Decoder44/biases"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder44/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Decoder44/weights"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Final_decoder/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Final_decoder/biases"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Final_decoder/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Final_decoder/weights"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "First_conv/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "First_conv/Conv/BatchNorm/beta"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "First_conv/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "First_conv/Conv/weights"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder41/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv_fused_Decoder41/biases"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder41/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv_fused_Decoder41/weights"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder42/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv_fused_Decoder42/biases"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder42/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv_fused_Decoder42/weights"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder43/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "conv_fused_Decoder43/biases"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder43/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "conv_fused_Decoder43/weights"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/weights"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/weights"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/weights"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/weights"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/weights"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/weights"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv/weights"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv_1/weights"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
}
node {
  name: "save_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 115
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 115
          }
        }
        string_val: "Decoder41/biases"
        string_val: "Decoder41/weights"
        string_val: "Decoder42/biases"
        string_val: "Decoder42/weights"
        string_val: "Decoder43/biases"
        string_val: "Decoder43/weights"
        string_val: "Decoder44/biases"
        string_val: "Decoder44/weights"
        string_val: "Final_decoder/biases"
        string_val: "Final_decoder/weights"
        string_val: "First_conv/Conv/BatchNorm/beta"
        string_val: "First_conv/Conv/weights"
        string_val: "conv_fused_Decoder41/biases"
        string_val: "conv_fused_Decoder41/weights"
        string_val: "conv_fused_Decoder42/biases"
        string_val: "conv_fused_Decoder42/weights"
        string_val: "conv_fused_Decoder43/biases"
        string_val: "conv_fused_Decoder43/weights"
        string_val: "global_step"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv/weights"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv/weights"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv/weights"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv/weights"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv/weights"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv/weights"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv/weights"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/Conv/weights"
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/Conv_1/weights"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/Conv/weights"
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/Conv/weights"
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/Conv/weights"
        string_val: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv/weights"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv/weights"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv/weights"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv/weights"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv/weights"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 115
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 115
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/Const"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "Decoder41/biases"
  input: "Decoder41/weights"
  input: "Decoder42/biases"
  input: "Decoder42/weights"
  input: "Decoder43/biases"
  input: "Decoder43/weights"
  input: "Decoder44/biases"
  input: "Decoder44/weights"
  input: "Final_decoder/biases"
  input: "Final_decoder/weights"
  input: "First_conv/Conv/BatchNorm/beta"
  input: "First_conv/Conv/weights"
  input: "conv_fused_Decoder41/biases"
  input: "conv_fused_Decoder41/weights"
  input: "conv_fused_Decoder42/biases"
  input: "conv_fused_Decoder42/weights"
  input: "conv_fused_Decoder43/biases"
  input: "conv_fused_Decoder43/weights"
  input: "global_step"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/Conv/weights"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/Conv_1/weights"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/Conv/weights"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/Conv_1/weights"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/Conv/weights"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/Conv_1/weights"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/Conv/weights"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/Conv_1/weights"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder41/biases"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign"
  op: "Assign"
  input: "Decoder41/biases"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder41/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_1"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_1/tensor_names"
  input: "save_1/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_1"
  op: "Assign"
  input: "Decoder41/weights"
  input: "save_1/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder42/biases"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_2/tensor_names"
  input: "save_1/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_2"
  op: "Assign"
  input: "Decoder42/biases"
  input: "save_1/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder42/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_3"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_3/tensor_names"
  input: "save_1/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_3"
  op: "Assign"
  input: "Decoder42/weights"
  input: "save_1/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 160
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder43/biases"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_4"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_4/tensor_names"
  input: "save_1/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_4"
  op: "Assign"
  input: "Decoder43/biases"
  input: "save_1/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder43/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_5"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_5/tensor_names"
  input: "save_1/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_5"
  op: "Assign"
  input: "Decoder43/weights"
  input: "save_1/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder44/biases"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_6"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_6/tensor_names"
  input: "save_1/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_6"
  op: "Assign"
  input: "Decoder44/biases"
  input: "save_1/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Decoder44/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_7"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_7/tensor_names"
  input: "save_1/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_7"
  op: "Assign"
  input: "Decoder44/weights"
  input: "save_1/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 120
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Final_decoder/biases"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_8"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_8/tensor_names"
  input: "save_1/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_8"
  op: "Assign"
  input: "Final_decoder/biases"
  input: "save_1/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Final_decoder/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_9"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_9/tensor_names"
  input: "save_1/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_9"
  op: "Assign"
  input: "Final_decoder/weights"
  input: "save_1/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "First_conv/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_10"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_10/tensor_names"
  input: "save_1/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_10"
  op: "Assign"
  input: "First_conv/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "First_conv/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_11"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_11/tensor_names"
  input: "save_1/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_11"
  op: "Assign"
  input: "First_conv/Conv/weights"
  input: "save_1/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder41/biases"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_12"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_12/tensor_names"
  input: "save_1/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_12"
  op: "Assign"
  input: "conv_fused_Decoder41/biases"
  input: "save_1/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder41/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_13"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_13/tensor_names"
  input: "save_1/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_13"
  op: "Assign"
  input: "conv_fused_Decoder41/weights"
  input: "save_1/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder42/biases"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_14"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_14/tensor_names"
  input: "save_1/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_14"
  op: "Assign"
  input: "conv_fused_Decoder42/biases"
  input: "save_1/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder42/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_15"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_15/tensor_names"
  input: "save_1/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_15"
  op: "Assign"
  input: "conv_fused_Decoder42/weights"
  input: "save_1/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder43/biases"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_16"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_16/tensor_names"
  input: "save_1/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_16"
  op: "Assign"
  input: "conv_fused_Decoder43/biases"
  input: "save_1/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv_fused_Decoder43/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_17"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_17/tensor_names"
  input: "save_1/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_17"
  op: "Assign"
  input: "conv_fused_Decoder43/weights"
  input: "save_1/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 48
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_18"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_18/tensor_names"
  input: "save_1/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save_1/Assign_18"
  op: "Assign"
  input: "global_step"
  input: "save_1/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_19"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_19/tensor_names"
  input: "save_1/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_19"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_20"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_20/tensor_names"
  input: "save_1/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_20"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "save_1/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_21"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_21/tensor_names"
  input: "save_1/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_21"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_22"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_22/tensor_names"
  input: "save_1/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_22"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_23"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_23/tensor_names"
  input: "save_1/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_23"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_24"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_24/tensor_names"
  input: "save_1/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_24"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_25"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_25/tensor_names"
  input: "save_1/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_25"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_26"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_26/tensor_names"
  input: "save_1/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_26"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "save_1/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_27"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_27/tensor_names"
  input: "save_1/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_27"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_28"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_28/tensor_names"
  input: "save_1/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_28"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_29"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_29/tensor_names"
  input: "save_1/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_29"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_30"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_30/tensor_names"
  input: "save_1/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_30"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_31"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_31/tensor_names"
  input: "save_1/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_31"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_32"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_32/tensor_names"
  input: "save_1/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_32"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "save_1/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_33"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_33/tensor_names"
  input: "save_1/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_33"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_34"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_34/tensor_names"
  input: "save_1/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_34"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_35"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_35/tensor_names"
  input: "save_1/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_35"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_36"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_36/tensor_names"
  input: "save_1/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_36"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_37"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_37/tensor_names"
  input: "save_1/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_37"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_38"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_38/tensor_names"
  input: "save_1/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_38"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "save_1/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_39"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_39/tensor_names"
  input: "save_1/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_39"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_40"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_40/tensor_names"
  input: "save_1/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_40"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "save_1/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 576
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_41"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_41/tensor_names"
  input: "save_1/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_41"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 576
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_42"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_42/tensor_names"
  input: "save_1/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_42"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 576
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_43"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_43/tensor_names"
  input: "save_1/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_43"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_44"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_44/tensor_names"
  input: "save_1/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_44"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "save_1/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_45"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_45/tensor_names"
  input: "save_1/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_45"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_46"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_46/tensor_names"
  input: "save_1/RestoreV2_46/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_46"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_47"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_47/tensor_names"
  input: "save_1/RestoreV2_47/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_47"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_48"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_48/tensor_names"
  input: "save_1/RestoreV2_48/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_48"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_49"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_49/tensor_names"
  input: "save_1/RestoreV2_49/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_49"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_50"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_50/tensor_names"
  input: "save_1/RestoreV2_50/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_50"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "save_1/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_51"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_51/tensor_names"
  input: "save_1/RestoreV2_51/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_51"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_52"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_52/tensor_names"
  input: "save_1/RestoreV2_52/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_52"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 160
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_53"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_53/tensor_names"
  input: "save_1/RestoreV2_53/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_53"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_54"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_54/tensor_names"
  input: "save_1/RestoreV2_54/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_54"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_55"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_55/tensor_names"
  input: "save_1/RestoreV2_55/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_55"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_56"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_56/tensor_names"
  input: "save_1/RestoreV2_56/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_56"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "save_1/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 160
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_57"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_57/tensor_names"
  input: "save_1/RestoreV2_57/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_57"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_58"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_58/tensor_names"
  input: "save_1/RestoreV2_58/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_58"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_59"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_59/tensor_names"
  input: "save_1/RestoreV2_59/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_59"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_60"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_60/tensor_names"
  input: "save_1/RestoreV2_60/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_60"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_61"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_61/tensor_names"
  input: "save_1/RestoreV2_61/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_61"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_62"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_62/tensor_names"
  input: "save_1/RestoreV2_62/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_62"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv/weights"
  input: "save_1/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_63"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_63/tensor_names"
  input: "save_1/RestoreV2_63/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_63"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_64"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_64/tensor_names"
  input: "save_1/RestoreV2_64/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_64"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/Conv_1/weights"
  input: "save_1/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_65"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_65/tensor_names"
  input: "save_1/RestoreV2_65/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_65"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_66"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_66/tensor_names"
  input: "save_1/RestoreV2_66/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_66"
  op: "Assign"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_67"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_67/tensor_names"
  input: "save_1/RestoreV2_67/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_67"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_68"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_68/tensor_names"
  input: "save_1/RestoreV2_68/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_68"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv/weights"
  input: "save_1/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_69"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_69/tensor_names"
  input: "save_1/RestoreV2_69/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_69"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_70"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_70/tensor_names"
  input: "save_1/RestoreV2_70/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_70"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/Conv_1/weights"
  input: "save_1/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 96
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_71"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_71/tensor_names"
  input: "save_1/RestoreV2_71/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_71"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 96
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_72"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_72/tensor_names"
  input: "save_1/RestoreV2_72/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_72"
  op: "Assign"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 96
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_73"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_73/tensor_names"
  input: "save_1/RestoreV2_73/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_73"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_74"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_74/tensor_names"
  input: "save_1/RestoreV2_74/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_74"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv/weights"
  input: "save_1/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_75"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_75/tensor_names"
  input: "save_1/RestoreV2_75/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_75"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_76"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_76/tensor_names"
  input: "save_1/RestoreV2_76/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_76"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_77"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_77/tensor_names"
  input: "save_1/RestoreV2_77/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_77"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_78"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_78/tensor_names"
  input: "save_1/RestoreV2_78/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_78"
  op: "Assign"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_79"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_79/tensor_names"
  input: "save_1/RestoreV2_79/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_79"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_80"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_80/tensor_names"
  input: "save_1/RestoreV2_80/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_80"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv/weights"
  input: "save_1/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_81"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_81/tensor_names"
  input: "save_1/RestoreV2_81/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_81"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_82"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_82/tensor_names"
  input: "save_1/RestoreV2_82/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_82"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/Conv_1/weights"
  input: "save_1/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 144
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_83"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_83/tensor_names"
  input: "save_1/RestoreV2_83/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_83"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 144
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_84"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_84/tensor_names"
  input: "save_1/RestoreV2_84/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_84"
  op: "Assign"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 144
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_85"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_85/tensor_names"
  input: "save_1/RestoreV2_85/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_85"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_86"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_86/tensor_names"
  input: "save_1/RestoreV2_86/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_86"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "save_1/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_87"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_87/tensor_names"
  input: "save_1/RestoreV2_87/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_87"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_88"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_88/tensor_names"
  input: "save_1/RestoreV2_88/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_88"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_89"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_89/tensor_names"
  input: "save_1/RestoreV2_89/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_89"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_90"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_90/tensor_names"
  input: "save_1/RestoreV2_90/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_90"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_91"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_91/tensor_names"
  input: "save_1/RestoreV2_91/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_91"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_92"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_92/tensor_names"
  input: "save_1/RestoreV2_92/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_92"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "save_1/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_93"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_93/tensor_names"
  input: "save_1/RestoreV2_93/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_93"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_94"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_94/tensor_names"
  input: "save_1/RestoreV2_94/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_94"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "save_1/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 192
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_95"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_95/tensor_names"
  input: "save_1/RestoreV2_95/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_95"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 192
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_96"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_96/tensor_names"
  input: "save_1/RestoreV2_96/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_96"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 192
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_97"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_97/tensor_names"
  input: "save_1/RestoreV2_97/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_97"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_98"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_98/tensor_names"
  input: "save_1/RestoreV2_98/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_98"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "save_1/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_99"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_99/tensor_names"
  input: "save_1/RestoreV2_99/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_99"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_100"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_100/tensor_names"
  input: "save_1/RestoreV2_100/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_100"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_101"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_101/tensor_names"
  input: "save_1/RestoreV2_101/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_101"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_102"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_102/tensor_names"
  input: "save_1/RestoreV2_102/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_102"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_103"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_103/tensor_names"
  input: "save_1/RestoreV2_103/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_103"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_104"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_104/tensor_names"
  input: "save_1/RestoreV2_104/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_104"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "save_1/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_105"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_105/tensor_names"
  input: "save_1/RestoreV2_105/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_105"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_106"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_106/tensor_names"
  input: "save_1/RestoreV2_106/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_106"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_107"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_107/tensor_names"
  input: "save_1/RestoreV2_107/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_107"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_108"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_108/tensor_names"
  input: "save_1/RestoreV2_108/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_108"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_109"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_109/tensor_names"
  input: "save_1/RestoreV2_109/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_109"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "save_1/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_110"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_110/tensor_names"
  input: "save_1/RestoreV2_110/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_110"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "save_1/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_111"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_111/tensor_names"
  input: "save_1/RestoreV2_111/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_111"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "save_1/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_112"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_112/tensor_names"
  input: "save_1/RestoreV2_112/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_112"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "save_1/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 384
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_113"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_113/tensor_names"
  input: "save_1/RestoreV2_113/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_113"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save_1/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 384
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2_114"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2_114/tensor_names"
  input: "save_1/RestoreV2_114/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign_114"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  input: "save_1/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 384
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/Assign"
  input: "^save_1/Assign_1"
  input: "^save_1/Assign_2"
  input: "^save_1/Assign_3"
  input: "^save_1/Assign_4"
  input: "^save_1/Assign_5"
  input: "^save_1/Assign_6"
  input: "^save_1/Assign_7"
  input: "^save_1/Assign_8"
  input: "^save_1/Assign_9"
  input: "^save_1/Assign_10"
  input: "^save_1/Assign_11"
  input: "^save_1/Assign_12"
  input: "^save_1/Assign_13"
  input: "^save_1/Assign_14"
  input: "^save_1/Assign_15"
  input: "^save_1/Assign_16"
  input: "^save_1/Assign_17"
  input: "^save_1/Assign_18"
  input: "^save_1/Assign_19"
  input: "^save_1/Assign_20"
  input: "^save_1/Assign_21"
  input: "^save_1/Assign_22"
  input: "^save_1/Assign_23"
  input: "^save_1/Assign_24"
  input: "^save_1/Assign_25"
  input: "^save_1/Assign_26"
  input: "^save_1/Assign_27"
  input: "^save_1/Assign_28"
  input: "^save_1/Assign_29"
  input: "^save_1/Assign_30"
  input: "^save_1/Assign_31"
  input: "^save_1/Assign_32"
  input: "^save_1/Assign_33"
  input: "^save_1/Assign_34"
  input: "^save_1/Assign_35"
  input: "^save_1/Assign_36"
  input: "^save_1/Assign_37"
  input: "^save_1/Assign_38"
  input: "^save_1/Assign_39"
  input: "^save_1/Assign_40"
  input: "^save_1/Assign_41"
  input: "^save_1/Assign_42"
  input: "^save_1/Assign_43"
  input: "^save_1/Assign_44"
  input: "^save_1/Assign_45"
  input: "^save_1/Assign_46"
  input: "^save_1/Assign_47"
  input: "^save_1/Assign_48"
  input: "^save_1/Assign_49"
  input: "^save_1/Assign_50"
  input: "^save_1/Assign_51"
  input: "^save_1/Assign_52"
  input: "^save_1/Assign_53"
  input: "^save_1/Assign_54"
  input: "^save_1/Assign_55"
  input: "^save_1/Assign_56"
  input: "^save_1/Assign_57"
  input: "^save_1/Assign_58"
  input: "^save_1/Assign_59"
  input: "^save_1/Assign_60"
  input: "^save_1/Assign_61"
  input: "^save_1/Assign_62"
  input: "^save_1/Assign_63"
  input: "^save_1/Assign_64"
  input: "^save_1/Assign_65"
  input: "^save_1/Assign_66"
  input: "^save_1/Assign_67"
  input: "^save_1/Assign_68"
  input: "^save_1/Assign_69"
  input: "^save_1/Assign_70"
  input: "^save_1/Assign_71"
  input: "^save_1/Assign_72"
  input: "^save_1/Assign_73"
  input: "^save_1/Assign_74"
  input: "^save_1/Assign_75"
  input: "^save_1/Assign_76"
  input: "^save_1/Assign_77"
  input: "^save_1/Assign_78"
  input: "^save_1/Assign_79"
  input: "^save_1/Assign_80"
  input: "^save_1/Assign_81"
  input: "^save_1/Assign_82"
  input: "^save_1/Assign_83"
  input: "^save_1/Assign_84"
  input: "^save_1/Assign_85"
  input: "^save_1/Assign_86"
  input: "^save_1/Assign_87"
  input: "^save_1/Assign_88"
  input: "^save_1/Assign_89"
  input: "^save_1/Assign_90"
  input: "^save_1/Assign_91"
  input: "^save_1/Assign_92"
  input: "^save_1/Assign_93"
  input: "^save_1/Assign_94"
  input: "^save_1/Assign_95"
  input: "^save_1/Assign_96"
  input: "^save_1/Assign_97"
  input: "^save_1/Assign_98"
  input: "^save_1/Assign_99"
  input: "^save_1/Assign_100"
  input: "^save_1/Assign_101"
  input: "^save_1/Assign_102"
  input: "^save_1/Assign_103"
  input: "^save_1/Assign_104"
  input: "^save_1/Assign_105"
  input: "^save_1/Assign_106"
  input: "^save_1/Assign_107"
  input: "^save_1/Assign_108"
  input: "^save_1/Assign_109"
  input: "^save_1/Assign_110"
  input: "^save_1/Assign_111"
  input: "^save_1/Assign_112"
  input: "^save_1/Assign_113"
  input: "^save_1/Assign_114"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "First_conv/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "First_conv/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "First_conv/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "First_conv/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "Decoder41/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "Decoder41/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder41/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder41/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder41/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "Decoder42/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "Decoder42/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder42/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder42/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder42/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "Decoder43/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "Decoder43/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder43/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder43/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "Decoder44/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "Decoder44/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "Final_decoder/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "Final_decoder/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "Training/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "Training/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "First_conv/Conv/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "First_conv/Conv/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "First_conv/Conv/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "First_conv/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@First_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_225"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_226"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_227"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_228"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_229"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_230"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_231"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_232"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_233"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_234"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_235"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_236"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_237"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_238"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_239"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_240"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_241"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_242"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_243"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_244"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_245"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_246"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_247"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_248"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_249"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_250"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_251"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_252"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_253"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_254"
  op: "IsVariableInitialized"
  input: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_255"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder43/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_256"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder43/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_257"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder43/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_258"
  op: "IsVariableInitialized"
  input: "conv_fused_Decoder43/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_fused_Decoder43/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_259"
  op: "IsVariableInitialized"
  input: "Decoder44/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_260"
  op: "IsVariableInitialized"
  input: "Decoder44/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_261"
  op: "IsVariableInitialized"
  input: "Decoder44/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_262"
  op: "IsVariableInitialized"
  input: "Decoder44/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder44/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_263"
  op: "IsVariableInitialized"
  input: "Final_decoder/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_264"
  op: "IsVariableInitialized"
  input: "Final_decoder/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_265"
  op: "IsVariableInitialized"
  input: "Final_decoder/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_266"
  op: "IsVariableInitialized"
  input: "Final_decoder/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final_decoder/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  input: "report_uninitialized_variables/IsVariableInitialized_116"
  input: "report_uninitialized_variables/IsVariableInitialized_117"
  input: "report_uninitialized_variables/IsVariableInitialized_118"
  input: "report_uninitialized_variables/IsVariableInitialized_119"
  input: "report_uninitialized_variables/IsVariableInitialized_120"
  input: "report_uninitialized_variables/IsVariableInitialized_121"
  input: "report_uninitialized_variables/IsVariableInitialized_122"
  input: "report_uninitialized_variables/IsVariableInitialized_123"
  input: "report_uninitialized_variables/IsVariableInitialized_124"
  input: "report_uninitialized_variables/IsVariableInitialized_125"
  input: "report_uninitialized_variables/IsVariableInitialized_126"
  input: "report_uninitialized_variables/IsVariableInitialized_127"
  input: "report_uninitialized_variables/IsVariableInitialized_128"
  input: "report_uninitialized_variables/IsVariableInitialized_129"
  input: "report_uninitialized_variables/IsVariableInitialized_130"
  input: "report_uninitialized_variables/IsVariableInitialized_131"
  input: "report_uninitialized_variables/IsVariableInitialized_132"
  input: "report_uninitialized_variables/IsVariableInitialized_133"
  input: "report_uninitialized_variables/IsVariableInitialized_134"
  input: "report_uninitialized_variables/IsVariableInitialized_135"
  input: "report_uninitialized_variables/IsVariableInitialized_136"
  input: "report_uninitialized_variables/IsVariableInitialized_137"
  input: "report_uninitialized_variables/IsVariableInitialized_138"
  input: "report_uninitialized_variables/IsVariableInitialized_139"
  input: "report_uninitialized_variables/IsVariableInitialized_140"
  input: "report_uninitialized_variables/IsVariableInitialized_141"
  input: "report_uninitialized_variables/IsVariableInitialized_142"
  input: "report_uninitialized_variables/IsVariableInitialized_143"
  input: "report_uninitialized_variables/IsVariableInitialized_144"
  input: "report_uninitialized_variables/IsVariableInitialized_145"
  input: "report_uninitialized_variables/IsVariableInitialized_146"
  input: "report_uninitialized_variables/IsVariableInitialized_147"
  input: "report_uninitialized_variables/IsVariableInitialized_148"
  input: "report_uninitialized_variables/IsVariableInitialized_149"
  input: "report_uninitialized_variables/IsVariableInitialized_150"
  input: "report_uninitialized_variables/IsVariableInitialized_151"
  input: "report_uninitialized_variables/IsVariableInitialized_152"
  input: "report_uninitialized_variables/IsVariableInitialized_153"
  input: "report_uninitialized_variables/IsVariableInitialized_154"
  input: "report_uninitialized_variables/IsVariableInitialized_155"
  input: "report_uninitialized_variables/IsVariableInitialized_156"
  input: "report_uninitialized_variables/IsVariableInitialized_157"
  input: "report_uninitialized_variables/IsVariableInitialized_158"
  input: "report_uninitialized_variables/IsVariableInitialized_159"
  input: "report_uninitialized_variables/IsVariableInitialized_160"
  input: "report_uninitialized_variables/IsVariableInitialized_161"
  input: "report_uninitialized_variables/IsVariableInitialized_162"
  input: "report_uninitialized_variables/IsVariableInitialized_163"
  input: "report_uninitialized_variables/IsVariableInitialized_164"
  input: "report_uninitialized_variables/IsVariableInitialized_165"
  input: "report_uninitialized_variables/IsVariableInitialized_166"
  input: "report_uninitialized_variables/IsVariableInitialized_167"
  input: "report_uninitialized_variables/IsVariableInitialized_168"
  input: "report_uninitialized_variables/IsVariableInitialized_169"
  input: "report_uninitialized_variables/IsVariableInitialized_170"
  input: "report_uninitialized_variables/IsVariableInitialized_171"
  input: "report_uninitialized_variables/IsVariableInitialized_172"
  input: "report_uninitialized_variables/IsVariableInitialized_173"
  input: "report_uninitialized_variables/IsVariableInitialized_174"
  input: "report_uninitialized_variables/IsVariableInitialized_175"
  input: "report_uninitialized_variables/IsVariableInitialized_176"
  input: "report_uninitialized_variables/IsVariableInitialized_177"
  input: "report_uninitialized_variables/IsVariableInitialized_178"
  input: "report_uninitialized_variables/IsVariableInitialized_179"
  input: "report_uninitialized_variables/IsVariableInitialized_180"
  input: "report_uninitialized_variables/IsVariableInitialized_181"
  input: "report_uninitialized_variables/IsVariableInitialized_182"
  input: "report_uninitialized_variables/IsVariableInitialized_183"
  input: "report_uninitialized_variables/IsVariableInitialized_184"
  input: "report_uninitialized_variables/IsVariableInitialized_185"
  input: "report_uninitialized_variables/IsVariableInitialized_186"
  input: "report_uninitialized_variables/IsVariableInitialized_187"
  input: "report_uninitialized_variables/IsVariableInitialized_188"
  input: "report_uninitialized_variables/IsVariableInitialized_189"
  input: "report_uninitialized_variables/IsVariableInitialized_190"
  input: "report_uninitialized_variables/IsVariableInitialized_191"
  input: "report_uninitialized_variables/IsVariableInitialized_192"
  input: "report_uninitialized_variables/IsVariableInitialized_193"
  input: "report_uninitialized_variables/IsVariableInitialized_194"
  input: "report_uninitialized_variables/IsVariableInitialized_195"
  input: "report_uninitialized_variables/IsVariableInitialized_196"
  input: "report_uninitialized_variables/IsVariableInitialized_197"
  input: "report_uninitialized_variables/IsVariableInitialized_198"
  input: "report_uninitialized_variables/IsVariableInitialized_199"
  input: "report_uninitialized_variables/IsVariableInitialized_200"
  input: "report_uninitialized_variables/IsVariableInitialized_201"
  input: "report_uninitialized_variables/IsVariableInitialized_202"
  input: "report_uninitialized_variables/IsVariableInitialized_203"
  input: "report_uninitialized_variables/IsVariableInitialized_204"
  input: "report_uninitialized_variables/IsVariableInitialized_205"
  input: "report_uninitialized_variables/IsVariableInitialized_206"
  input: "report_uninitialized_variables/IsVariableInitialized_207"
  input: "report_uninitialized_variables/IsVariableInitialized_208"
  input: "report_uninitialized_variables/IsVariableInitialized_209"
  input: "report_uninitialized_variables/IsVariableInitialized_210"
  input: "report_uninitialized_variables/IsVariableInitialized_211"
  input: "report_uninitialized_variables/IsVariableInitialized_212"
  input: "report_uninitialized_variables/IsVariableInitialized_213"
  input: "report_uninitialized_variables/IsVariableInitialized_214"
  input: "report_uninitialized_variables/IsVariableInitialized_215"
  input: "report_uninitialized_variables/IsVariableInitialized_216"
  input: "report_uninitialized_variables/IsVariableInitialized_217"
  input: "report_uninitialized_variables/IsVariableInitialized_218"
  input: "report_uninitialized_variables/IsVariableInitialized_219"
  input: "report_uninitialized_variables/IsVariableInitialized_220"
  input: "report_uninitialized_variables/IsVariableInitialized_221"
  input: "report_uninitialized_variables/IsVariableInitialized_222"
  input: "report_uninitialized_variables/IsVariableInitialized_223"
  input: "report_uninitialized_variables/IsVariableInitialized_224"
  input: "report_uninitialized_variables/IsVariableInitialized_225"
  input: "report_uninitialized_variables/IsVariableInitialized_226"
  input: "report_uninitialized_variables/IsVariableInitialized_227"
  input: "report_uninitialized_variables/IsVariableInitialized_228"
  input: "report_uninitialized_variables/IsVariableInitialized_229"
  input: "report_uninitialized_variables/IsVariableInitialized_230"
  input: "report_uninitialized_variables/IsVariableInitialized_231"
  input: "report_uninitialized_variables/IsVariableInitialized_232"
  input: "report_uninitialized_variables/IsVariableInitialized_233"
  input: "report_uninitialized_variables/IsVariableInitialized_234"
  input: "report_uninitialized_variables/IsVariableInitialized_235"
  input: "report_uninitialized_variables/IsVariableInitialized_236"
  input: "report_uninitialized_variables/IsVariableInitialized_237"
  input: "report_uninitialized_variables/IsVariableInitialized_238"
  input: "report_uninitialized_variables/IsVariableInitialized_239"
  input: "report_uninitialized_variables/IsVariableInitialized_240"
  input: "report_uninitialized_variables/IsVariableInitialized_241"
  input: "report_uninitialized_variables/IsVariableInitialized_242"
  input: "report_uninitialized_variables/IsVariableInitialized_243"
  input: "report_uninitialized_variables/IsVariableInitialized_244"
  input: "report_uninitialized_variables/IsVariableInitialized_245"
  input: "report_uninitialized_variables/IsVariableInitialized_246"
  input: "report_uninitialized_variables/IsVariableInitialized_247"
  input: "report_uninitialized_variables/IsVariableInitialized_248"
  input: "report_uninitialized_variables/IsVariableInitialized_249"
  input: "report_uninitialized_variables/IsVariableInitialized_250"
  input: "report_uninitialized_variables/IsVariableInitialized_251"
  input: "report_uninitialized_variables/IsVariableInitialized_252"
  input: "report_uninitialized_variables/IsVariableInitialized_253"
  input: "report_uninitialized_variables/IsVariableInitialized_254"
  input: "report_uninitialized_variables/IsVariableInitialized_255"
  input: "report_uninitialized_variables/IsVariableInitialized_256"
  input: "report_uninitialized_variables/IsVariableInitialized_257"
  input: "report_uninitialized_variables/IsVariableInitialized_258"
  input: "report_uninitialized_variables/IsVariableInitialized_259"
  input: "report_uninitialized_variables/IsVariableInitialized_260"
  input: "report_uninitialized_variables/IsVariableInitialized_261"
  input: "report_uninitialized_variables/IsVariableInitialized_262"
  input: "report_uninitialized_variables/IsVariableInitialized_263"
  input: "report_uninitialized_variables/IsVariableInitialized_264"
  input: "report_uninitialized_variables/IsVariableInitialized_265"
  input: "report_uninitialized_variables/IsVariableInitialized_266"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 267
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 267
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 267
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 267
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 267
          }
        }
        string_val: "First_conv/Conv/weights"
        string_val: "First_conv/Conv/BatchNorm/beta"
        string_val: "First_conv/Conv/BatchNorm/moving_mean"
        string_val: "First_conv/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_1_0/Conv/weights"
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_1_0/Conv_1/weights"
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_1/Conv/weights"
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_0/Conv/weights"
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_1/Conv/weights"
        string_val: "inverted_bottleneck4_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/Conv/weights"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/Conv/weights"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/Conv/weights"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/Conv/weights"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/Conv/weights"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/Conv/weights"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/Conv/weights"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/Conv/weights"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/Conv/weights"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/Conv/weights"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/Conv/weights"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/Conv/weights"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "Decoder41/weights"
        string_val: "Decoder41/biases"
        string_val: "conv_fused_Decoder41/weights"
        string_val: "conv_fused_Decoder41/biases"
        string_val: "Decoder42/weights"
        string_val: "Decoder42/biases"
        string_val: "conv_fused_Decoder42/weights"
        string_val: "conv_fused_Decoder42/biases"
        string_val: "Decoder43/weights"
        string_val: "Decoder43/biases"
        string_val: "conv_fused_Decoder43/weights"
        string_val: "conv_fused_Decoder43/biases"
        string_val: "Decoder44/weights"
        string_val: "Decoder44/biases"
        string_val: "Final_decoder/weights"
        string_val: "Final_decoder/biases"
        string_val: "global_step"
        string_val: "Training/beta1_power"
        string_val: "Training/beta2_power"
        string_val: "First_conv/Conv/weights/Adam"
        string_val: "First_conv/Conv/weights/Adam_1"
        string_val: "First_conv/Conv/BatchNorm/beta/Adam"
        string_val: "First_conv/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_1_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck1_1_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_1_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck1_1_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck2_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck2_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck3_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck3_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "conv_fused_Decoder43/weights/Adam"
        string_val: "conv_fused_Decoder43/weights/Adam_1"
        string_val: "conv_fused_Decoder43/biases/Adam"
        string_val: "conv_fused_Decoder43/biases/Adam_1"
        string_val: "Decoder44/weights/Adam"
        string_val: "Decoder44/weights/Adam_1"
        string_val: "Decoder44/biases/Adam"
        string_val: "Decoder44/biases/Adam_1"
        string_val: "Final_decoder/weights/Adam"
        string_val: "Final_decoder/weights/Adam_1"
        string_val: "Final_decoder/biases/Adam"
        string_val: "Final_decoder/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 267
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 267
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 267
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 267
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^First_conv/Conv/weights/Assign"
  input: "^First_conv/Conv/BatchNorm/beta/Assign"
  input: "^First_conv/Conv/BatchNorm/moving_mean/Assign"
  input: "^First_conv/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck1_1_0/Conv/weights/Assign"
  input: "^inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck1_1_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck1_1_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck1_1_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck1_1_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck2_6_1/Conv/weights/Assign"
  input: "^inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck2_6_1/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck2_6_1/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck2_6_1/Conv_1/weights/Assign"
  input: "^inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck2_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck3_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck3_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck3_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck3_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck3_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck4_6_1/Conv/weights/Assign"
  input: "^inverted_bottleneck4_6_1/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck4_6_1/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck4_6_1/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck4_6_1/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck4_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck4_6_1/Conv_1/weights/Assign"
  input: "^inverted_bottleneck4_6_1/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck4_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/weights/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/weights/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/weights/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/weights/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^Decoder41/weights/Assign"
  input: "^Decoder41/biases/Assign"
  input: "^conv_fused_Decoder41/weights/Assign"
  input: "^conv_fused_Decoder41/biases/Assign"
  input: "^Decoder42/weights/Assign"
  input: "^Decoder42/biases/Assign"
  input: "^conv_fused_Decoder42/weights/Assign"
  input: "^conv_fused_Decoder42/biases/Assign"
  input: "^Decoder43/weights/Assign"
  input: "^Decoder43/biases/Assign"
  input: "^conv_fused_Decoder43/weights/Assign"
  input: "^conv_fused_Decoder43/biases/Assign"
  input: "^Decoder44/weights/Assign"
  input: "^Decoder44/biases/Assign"
  input: "^Final_decoder/weights/Assign"
  input: "^Final_decoder/biases/Assign"
  input: "^global_step/Assign"
  input: "^Training/beta1_power/Assign"
  input: "^Training/beta2_power/Assign"
  input: "^First_conv/Conv/weights/Adam/Assign"
  input: "^First_conv/Conv/weights/Adam_1/Assign"
  input: "^First_conv/Conv/BatchNorm/beta/Adam/Assign"
  input: "^First_conv/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck1_1_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck1_1_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck1_1_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck1_1_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck1_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck1_1_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck1_1_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck1_1_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_1/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck2_6_1/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck2_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck2_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck2_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_1/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck2_6_1/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck2_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck3_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck3_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck3_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck3_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck3_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck3_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^conv_fused_Decoder43/weights/Adam/Assign"
  input: "^conv_fused_Decoder43/weights/Adam_1/Assign"
  input: "^conv_fused_Decoder43/biases/Adam/Assign"
  input: "^conv_fused_Decoder43/biases/Adam_1/Assign"
  input: "^Decoder44/weights/Adam/Assign"
  input: "^Decoder44/weights/Adam_1/Assign"
  input: "^Decoder44/biases/Adam/Assign"
  input: "^Decoder44/biases/Adam_1/Assign"
  input: "^Final_decoder/weights/Adam/Assign"
  input: "^Final_decoder/weights/Adam_1/Assign"
  input: "^Final_decoder/biases/Adam/Assign"
  input: "^Final_decoder/biases/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "total_loss"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 24
}
